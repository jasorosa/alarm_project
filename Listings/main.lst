A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;$include (t89c51cc01.inc)
                +1     2     ;*INC*************************************************************************
                +1     3     ; NAME: 89C51CC01.inc           
                +1     4     ;----------------------------------------------------------------------------
                +1     5     ; PURPOSE: for Keil
                +1     6     ;*****************************************************************************
                +1     7     
                +1     8     ;----------------------------------------
                +1     9     ; Include file for 8051 SFR Definitions  
                +1    10     ;----------------------------------------
                +1    11     
                +1    12     ;  BYTE Register 
  0080          +1    13     P0      DATA    80H
  0090          +1    14     P1      DATA    90H
  00A0          +1    15     P2      DATA    0A0H
                +1    16     
  00B0          +1    17     P3      DATA    0B0H
  00B7          +1    18     RD      BIT     0B7H
  00B6          +1    19     WR      BIT     0B6H
  00B5          +1    20     T1      BIT     0B5H
  00B4          +1    21     T0      BIT     0B4H
  00B3          +1    22     INT1    BIT     0B3H
  00B2          +1    23     INT0    BIT     0B2H
  00B1          +1    24     TXD     BIT     0B1H
  00B0          +1    25     RXD     BIT     0B0H
                +1    26     
  00C0          +1    27     P4      DATA    0C0H
                +1    28     
  00D0          +1    29     PSW     DATA    0D0H
  00D7          +1    30     CY      BIT     0D7H
  00D6          +1    31     AC      BIT     0D6H
  00D5          +1    32     F0      BIT     0D5H
  00D4          +1    33     RS1     BIT     0D4H
  00D3          +1    34     RS0     BIT     0D3H
  00D2          +1    35     OV      BIT     0D2H
  00D0          +1    36     P       BIT     0D0H
                +1    37     
  00E0          +1    38     ACC     DATA    0E0H
  00F0          +1    39     B       DATA    0F0H
  0081          +1    40     SP      DATA    81H
  0082          +1    41     DPL     DATA    82H
  0083          +1    42     DPH     DATA    83H
  0087          +1    43     PCON    DATA    87H
  008F          +1    44     CKCON   DATA    8FH
                +1    45     
                +1    46     ;------------------ TIMERS registers ---------------------
  0088          +1    47     TCON    DATA    88H
  008F          +1    48     TF1     BIT     8FH
  008E          +1    49     TR1     BIT     8EH
  008D          +1    50     TF0     BIT     8DH
  008C          +1    51     TR0     BIT     8CH
  008B          +1    52     IE1     BIT     8BH
  008A          +1    53     IT1     BIT     8AH
  0089          +1    54     IE0     BIT     89H
  0088          +1    55     IT0     BIT     88H
                +1    56             
  0089          +1    57     TMOD    DATA    89H
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     2

                +1    58     
  00C8          +1    59     T2CON   DATA    0C8H
  00CF          +1    60     TF2     BIT     0CFH
  00CE          +1    61     EXF2    BIT     0CEH
  00CD          +1    62     RCLK    BIT     0CDH
  00CC          +1    63     TCLK    BIT     0CCH
  00CB          +1    64     EXEN2   BIT     0CBH
  00CA          +1    65     TR2     BIT     0CAH
  00C9          +1    66     C_T2    BIT     0C9H
  00C8          +1    67     CP_RL2  BIT     0C8H
                +1    68             
  00C9          +1    69     T2MOD   DATA    0C9H    
  008A          +1    70     TL0     DATA    8AH
  008B          +1    71     TL1     DATA    8BH
  00CC          +1    72     TL2     DATA    0CCH
  008C          +1    73     TH0     DATA    8CH
  008D          +1    74     TH1     DATA    8DH
  00CD          +1    75     TH2     DATA    0CDH    
  00CA          +1    76     RCAP2L  DATA    0CAH    
  00CB          +1    77     RCAP2H  DATA    0CBH    
  00A6          +1    78     WDTRST  DATA    0A6H    
  00A7          +1    79     WDTPRG  DATA    0A7H    
                +1    80     
                +1    81     
                +1    82     ;------------------- UART registers ------------------------
  0098          +1    83     SCON    DATA    98H
  009F          +1    84     SM0     BIT     9FH
  009F          +1    85     FE      BIT     9FH
  009E          +1    86     SM1     BIT     9EH
  009D          +1    87     SM2     BIT     9DH
  009C          +1    88     REN     BIT     9CH
  009B          +1    89     TB8     BIT     9BH
  009A          +1    90     RB8     BIT     9AH
  0099          +1    91     TI      BIT     99H
  0098          +1    92     RI      BIT     98H
                +1    93     
  0099          +1    94     SBUF    DATA    99H
  00B9          +1    95     SADEN   DATA    0B9H
  00A9          +1    96     SADDR   DATA    0A9H    
                +1    97     
                +1    98     ;-------------------- ADC registers ----------------------
  00F2          +1    99     ADCLK   DATA    0F2H    
  00F3          +1   100     ADCON   DATA    0F3H    
  00F4          +1   101     ADDL    DATA    0F4H    
  00F5          +1   102     ADDH    DATA    0F5H    
  00F6          +1   103     ADCF    DATA    0F6H    
                +1   104     
                +1   105     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   106     FPGACON  DATA   0F1H    
  00D1          +1   107     FCON    DATA    0D1H    
  00D2          +1   108     EECON   DATA    0D2H    
  008E          +1   109     AUXR    DATA    8EH
  00A2          +1   110     AUXR1   DATA    0A2H
                +1   111     
                +1   112     ;-------------------- IT registers -----------------------
  00F8          +1   113     IPL1    DATA    0F8H    
  00F7          +1   114     IPH1    DATA    0F7H    
  00A8          +1   115     IEN0    DATA    0A8H    
  00B8          +1   116     IPL0    DATA    0B8H    
  00B7          +1   117     IPH0    DATA    0B7H    
  00E8          +1   118     IEN1    DATA    0E8H    
                +1   119     
                +1   120     ;  IEN0  
  00AF          +1   121     EA      BIT     0AFH
  00AE          +1   122     EC      BIT     0AEH
  00AD          +1   123     ET2     BIT     0ADH
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     3

  00AC          +1   124     ES      BIT     0ACH
  00AB          +1   125     ET1     BIT     0ABH
  00AA          +1   126     EX1     BIT     0AAH
  00A9          +1   127     ET0     BIT     0A9H
  00A8          +1   128     EX0     BIT     0A8H
                +1   129     
                +1   130     ;  IEN1 
  00EA          +1   131     ETIM    BIT     0EAH
  00E9          +1   132     EADC    BIT     0E9H
  00E8          +1   133     ECAN    BIT     0E8H
                +1   134     
                +1   135     ;--------------------- PCA registers --------------------
  00D8          +1   136     CCON    DATA    0D8H    
  00DF          +1   137     CF              BIT             0DFH
  00DE          +1   138     CR              BIT             0DEH
  00D4          +1   139     CCF4    BIT             0D4H
  00D3          +1   140     CCF3    BIT             0D3H
  00D2          +1   141     CCF2    BIT             0D2H
  00D1          +1   142     CCF1    BIT             0D1H
  00D0          +1   143     CCF0    BIT             0D0H
                +1   144     
  00D9          +1   145     CMOD    DATA    0D9H    
  00F9          +1   146     CH      DATA    0F9H    
  00E9          +1   147     CL      DATA    0E9H    
  00FA          +1   148     CCAP0H  DATA    0FAH    
  00EA          +1   149     CCAP0L  DATA    0EAH    
  00DA          +1   150     CCAPM0  DATA    0DAH    
  00FB          +1   151     CCAP1H  DATA    0FBH    
  00EB          +1   152     CCAP1L  DATA    0EBH    
  00DB          +1   153     CCAPM1  DATA    0DBH    
  00FC          +1   154     CCAP2H  DATA    0FCH    
  00EC          +1   155     CCAP2L  DATA    0ECH    
  00DC          +1   156     CCAPM2  DATA    0DCH    
  00FD          +1   157     CCAP3H  DATA    0FDH    
  00ED          +1   158     CCAP3L  DATA    0EDH    
  00DD          +1   159     CCAPM3  DATA    0DDH    
  00FE          +1   160     CCAP4H  DATA    0FEH    
  00EE          +1   161     CCAP4L  DATA    0EEH    
  00DE          +1   162     CCAPM4  DATA    0DEH    
                +1   163     
                +1   164     ;------------------- CAN registers --------------------------
  009B          +1   165     CANGIT          DATA    09BH
  009C          +1   166     CANTEC          DATA    09CH
  009D          +1   167     CANREC          DATA    09DH
  00A1          +1   168     CANTCON         DATA    0A1H    
  00A3          +1   169     CANMSG          DATA    0A3H    
  00A4          +1   170     CANTTCL         DATA    0A4H    
  00A5          +1   171     CANTTCH         DATA    0A5H    
  00AA          +1   172     CANGSTA         DATA    0AAH
  00AB          +1   173     CANGCON         DATA    0ABH
  00AC          +1   174     CANTIML         DATA    0ACH    
  00AD          +1   175     CANTIMH         DATA    0ADH    
  00AE          +1   176     CANSTMPL        DATA    0AEH    
  00AF          +1   177     CANSTMPH        DATA    0AFH
  00B1          +1   178     CANPAGE         DATA    0B1H
  00B2          +1   179     CANSTCH         DATA    0B2H    
  00B3          +1   180     CANCONCH        DATA    0B3H    
  00B4          +1   181     CANBT1          DATA    0B4H
  00B5          +1   182     CANBT2          DATA    0B5H
  00B6          +1   183     CANBT3          DATA    0B6H
  00BA          +1   184     CANSIT1         DATA    0BAH
  00BB          +1   185     CANSIT2         DATA    0BBH    
  00BC          +1   186     CANIDT1         DATA    0BCH
  00BD          +1   187     CANIDT2         DATA    0BDH    
  00BE          +1   188     CANIDT3         DATA    0BEH    
  00BF          +1   189     CANIDT4         DATA    0BFH    
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     4

  00C1          +1   190     CANGIE          DATA    0C1H
  00C2          +1   191     CANIE1          DATA    0C2H    
  00C3          +1   192     CANIE2          DATA    0C3H
  00C4          +1   193     CANIDM1         DATA    0C4H
  00C5          +1   194     CANIDM2         DATA    0C5H
  00C6          +1   195     CANIDM3         DATA    0C6H
  00C7          +1   196     CANIDM4         DATA    0C7H
  00CE          +1   197     CANEN1          DATA    0CEH
  00CF          +1   198     CANEN2          DATA    0CFH
                +1   199     
                +1   200     
                     201     
                     202     
                     203     ; DEFINITIONS
  00C0               204     SHIFT EQU P4.0
  00C1               205     DATA_BITS  EQU P4.1
  00B2               206     STORE EQU P3.2
                     207     
                     208     ;INIT ISRs
0000                 209     ORG 0000h
0000 02002E          210     LJMP init
000B                 211     ORG 000Bh
000B 0200B0          212     LJMP keyboardISR ; timer 0
001B                 213     ORG 001Bh
001B 020264          214     LJMP extISR ; timer 1
002B                 215     ORG 002Bh
002B 020278          216     LJMP screenISR ; timer 2
                     217     
                     218     
002E 758170          219     init:                                   MOV SP,#070h ; as we use several register bank (but
                              what is it exacly ?)
0031 758911          220                                                     MOV TMOD,#00010001b ; 16 bit mode for timer
                              0 and 1
0034 758CFB          221                                                     MOV TH0,#0FBh ; MSB set 880Hz of timer 0
0037 758A8F          222                                                     MOV TL0,#08Fh ; LSB same  for LSB
003A 758D0B          223                                                     MOV TH1, #0Bh ; about 15Hz for timer 1
003D 758BDB          224                                                     MOV TL1, #0DBh
0040 75CDFB          225                                                     MOV TH2,#0FBh
0043 75CC8F          226                                                     MOV TL2,#08Fh
0046 7C34            227                                                     MOV R4, #00110100b ; 2 LSD 4 first = 4, 4 n
                             ext = 3
0048 7D12            228                                                     MOV R5, #00010010b ; 2 MSD 4 next = 2, 4 ne
                             xt = 1 => code is 1234
004A 7800            229                                                     MOV R0, #00h
004C 7E00            230                                                     MOV R6, #00h
004E 75310F          231                                                     MOV 31h, #0Fh ; RAM byte addressable to sav
                             e previous state of keyboard (random initial value)
0051 75320F          232                                                     MOV 32h, #0Fh ; RAM byte addressable to sto
                             re temporarily "data pointer" for screen (random init value)
                     233     
0054 753858          234                                                     MOV 38h, #88
0057 753958          235                                                     MOV 39h, #88
005A 753A58          236                                                     MOV 3Ah, #88
005D 753B58          237                                                     MOV 3Bh, #88
0060 753C50          238                                                     MOV 3Ch, #80
0063 753D50          239                                                     MOV 3Dh, #80
0066 753E50          240                                                     MOV 3Eh, #80
0069 753F50          241                                                     MOV 3Fh, #80
                     242     
006C C2C1            243                                                     CLR DATA_BITS
006E C2C0            244                                                     CLR SHIFT
0070 C2B2            245                                                     CLR STORE
0072 D2D4            246                                                     SETB RS1 ; init some registers in register 
                             bank (1,1) for screen
0074 D2D3            247                                                     SETB RS0
0076 7E00            248                                                     MOV R6, #0
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     5

0078 E4              249                                                     CLR A
0079 7D00            250                                                     MOV R5, #0
007B C2D4            251                                                     CLR RS1
007D C2D3            252                                                     CLR RS0
007F D2A9            253                                                     SETB ET0 ; enable timer 0 interrupt
0081 D2AB            254                                                     SETB ET1 ; enable timer 1 interrupt
0083 D2AD            255                                                     SETB ET2 ; enable timer 2 interrupt
0085 D2AA            256                                                     SETB EX1 ; enable external interrupt 1
0087 D2AF            257                                                     SETB EA ; enable int
0089 D28C            258                                                     SETB TR0 ; enable timer 0, 1, 2
008B D28E            259                                                     SETB TR1
008D D2CA            260                                                     SETB TR2
                     261     
                     262     ;------------------------------------   MAIN   --------------------------------------------
                             ------
008F BE0003          263     main:                                   CJNE R6, #00h, next ; alarm is not activated : end 
                             otherwise next
0092 02008F          264                                                     LJMP main
0095 D2A4            265     next:                                   SETB P2.4 ; debug
0097 DFF6            266                                                     DJNZ R7, main ; 15s decounting. normally sc
                             reen ! (?? what ? why screen ?)
0099 B2A3            267                                                     CPL P2.3 ; flashing led
009B BE010C          268                                                     CJNE R6, #01h, scream ; if not pre alarm it
                              is pre alert and after 15s we can start SKRIMIN
009E BE0303          269                                                     CJNE R6, #03h, activation ; it is prealarm 
                             so activate alarm system after 15sc
00A1 02008F          270                                                     LJMP main
                     271     
00A4 0E              272     activation:                             INC R6 ;prealarm mode to alarm mode
00A5 C2A4            273                                                     CLR P2.4 ; led shows alarm is on
00A7 02008F          274                                                     LJMP main
                     275     
00AA 0E              276     scream:                                 INC R6 ;prealert mode to alert mode
00AB B2A2            277                                                     CPL P2.2 ; change state of buzzer
00AD 02008F          278                                                     LJMP main
                     279     
                     280     ;------------------------------------   KEYBOARD   ----------------------------------------
                             ----------
00B0 C0D0            281     keyboardISR:                    PUSH PSW ; review what are PSW, ACC and PUSH/POP !!!!
00B2 C0E0            282                                                     PUSH ACC
00B4 C2A3            283                                                     CLR P2.3 ; debug
00B6 75800F          284                                                     MOV P0,#00001111b
                     285     
00B9 30800C          286                                                     JNB P0.0, dichotomy00
00BC 308117          287                                                     JNB P0.1, dichotomy01
00BF 308222          288                                                     JNB P0.2, dichotomy02
00C2 30832D          289                                                     JNB P0.3, dichotomy03
00C5 0201DE          290                                                     LJMP nothing
                     291     
00C8 C284            292     dichotomy00:                    CLR P0.4
00CA C285            293                                                     CLR P0.5
00CC D286            294                                                     SETB P0.6
00CE D287            295                                                     SETB P0.7
00D0 30802D          296                                                     JNB P0.0, dichotomy00zero
00D3 02013E          297                                                     LJMP dichotomy00one
                     298     
00D6 C284            299     dichotomy01:                    CLR P0.4
00D8 C285            300                                                     CLR P0.5
00DA D286            301                                                     SETB P0.6
00DC D287            302                                                     SETB P0.7
00DE 30812D          303                                                     JNB P0.1, dichotomy01zero
00E1 02014C          304                                                     LJMP dichotomy01one
                     305     
00E4 C284            306     dichotomy02:                    CLR P0.4
00E6 C285            307                                                     CLR P0.5
00E8 D286            308                                                     SETB P0.6
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     6

00EA D287            309                                                     SETB P0.7
00EC 30822D          310                                                     JNB P0.2, dichotomy02zero
00EF 02015A          311                                                     LJMP dichotomy02one
                     312     
00F2 C284            313     dichotomy03:                    CLR P0.4
00F4 C285            314                                                     CLR P0.5
00F6 D286            315                                                     SETB P0.6
00F8 D287            316                                                     SETB P0.7
00FA 30832D          317                                                     JNB P0.3, dichotomy03zero
00FD 02016E          318                                                     LJMP dichotomy03one
                     319     
0100 C284            320     dichotomy00zero:                CLR P0.4
0102 D285            321                                                     SETB P0.5
0104 C286            322                                                     CLR P0.6
0106 D287            323                                                     SETB P0.7
0108 30802D          324                                                     JNB P0.0, intermediateletterC
010B 0201D5          325                                                     LJMP letterD
                     326     
010E C284            327     dichotomy01zero:                CLR P0.4
0110 D285            328                                                     SETB P0.5
0112 C286            329                                                     CLR P0.6
0114 D287            330                                                     SETB P0.7
0116 308122          331                                                     JNB P0.1, intermediateletterB
0119 020194          332                                                     LJMP three
                     333     
011C C284            334     dichotomy02zero:                CLR P0.4
011E D285            335                                                     SETB P0.5
0120 C286            336                                                     CLR P0.6
0122 D287            337                                                     SETB P0.7
0124 308255          338                                                     JNB P0.2, zero
0127 02018C          339                                                     LJMP two
                     340     
012A C284            341     dichotomy03zero:                CLR P0.4
012C D285            342                                                     SETB P0.5
012E C286            343                                                     CLR P0.6
0130 D287            344                                                     SETB P0.7
0132 308333          345                                                     JNB P0.3, intermediateletterA
0135 020184          346                                                     LJMP one
                     347     
0138 0201D2          348     intermediateletterC:    LJMP letterC ; too long jump otherwise
013B 0201CF          349     intermediateletterB:    LJMP letterB
                     350     
013E C284            351     dichotomy00one:                 CLR P0.4
0140 D285            352                                                     SETB P0.5
0142 C286            353                                                     CLR P0.6
0144 D287            354                                                     SETB P0.7
0146 308022          355                                                     JNB P0.0, intermediateletterE
0149 0201DB          356                                                     LJMP letterF
                     357     
014C C284            358     dichotomy01one:                 CLR P0.4
014E D285            359                                                     SETB P0.5
0150 C286            360                                                     CLR P0.6
0152 D287            361                                                     SETB P0.7
0154 308155          362                                                     JNB P0.1, six
0157 0201C4          363                                                     LJMP nine
                     364     
015A C284            365     dichotomy02one:                 CLR P0.4
015C D285            366                                                     SETB P0.5
015E C286            367                                                     CLR P0.6
0160 D287            368                                                     SETB P0.7
0162 30823F          369                                                     JNB P0.2, five
0165 0201BC          370                                                     LJMP eight
                     371     
0168 0201CC          372     intermediateletterA:    LJMP letterA ; too long jump otherwise
016B 0201D8          373     intermediateletterE:    LJMP letterE
                     374     
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     7

016E C284            375     dichotomy03one:                 CLR P0.4
0170 D285            376                                                     SETB P0.5
0172 C286            377                                                     CLR P0.6
0174 D287            378                                                     SETB P0.7
0176 308323          379                                                     JNB P0.3, four
0179 0201B4          380                                                     LJMP seven
                     381     
017C 7900            382     zero:                                   MOV R1, #00h
017E 753200          383                                                     MOV 32h, #0 ; each code block has 8 lines s
                             o if we want key0, we start from key0+0, if key1 : key0+8 and so on
0181 0201E4          384                                                     LJMP entercode
0184 7901            385     one:                                    MOV R1, #01h
0186 753208          386                                                     MOV 32h, #8
0189 0201E4          387                                                     LJMP entercode
018C 7902            388     two:                                    MOV R1, #02h
018E 753210          389                                                     MOV 32h, #16
0191 0201E4          390                                                     LJMP entercode
0194 7903            391     three:                                  MOV R1, #03h
0196 753218          392                                                     MOV 32h, #24
0199 0201E4          393                                                     LJMP entercode
019C 7904            394     four:                                   MOV R1, #04h
019E 753220          395                                                     MOV 32h, #32
01A1 0201E4          396                                                     LJMP entercode
01A4 7905            397     five:                                   MOV R1, #05h
01A6 753228          398                                                     MOV 32h, #40
01A9 0201E4          399                                                     LJMP entercode
01AC 7906            400     six:                                    MOV R1, #06h
01AE 753230          401                                                     MOV 32h, #48
01B1 0201E4          402                                                     LJMP entercode
01B4 7907            403     seven:                                  MOV R1, #07h
01B6 753238          404                                                     MOV 32h, #56
01B9 0201E4          405                                                     LJMP entercode
01BC 7908            406     eight:                                  MOV R1, #08h
01BE 753222          407                                                     MOV 32h, #34
01C1 0201E4          408                                                     LJMP entercode
01C4 7909            409     nine:                                   MOV R1, #09h
01C6 753248          410                                                     MOV 32h, #72
01C9 0201E4          411                                                     LJMP entercode
01CC 020259          412     letterA:                                LJMP endKeyboardISR
01CF 020259          413     letterB:                                LJMP endKeyboardISR
01D2 020244          414     letterC:                                LJMP clearcode
01D5 020259          415     letterD:                                LJMP endKeyboardISR
01D8 020259          416     letterE:                                LJMP endKeyboardISR
01DB 020259          417     letterF:                                LJMP endKeyboardISR
01DE 75310F          418     nothing:                                MOV 31h,#0Fh ; if no button pressed : set the store
                             d value at a random value 0Fh
01E1 020259          419                                                     LJMP endKeyboardISR
                     420     
01E4 E531            421     entercode:                              MOV A,31h
01E6 B40F70          422                                                     CJNE A,#0Fh, endKeyboardISR ; the stored va
                             lue in 31h is used to debounce the keyboard
01E9 0201EC          423                                                     LJMP continue
01EC E9              424     continue:                               MOV A, R1
01ED F531            425                                                     MOV 31h, A
01EF B80007          426                                                     CJNE R0, #00h, code2 ;if counter of pressed
                              button (R0) is 0 its the first number of the code, else go to code2(second number)
01F2 E532            427                                                     MOV A, 32h                       ;code stor
                             ed on 2 registers. we use SWAP function to do this well. If code is 1234 : R3 : 00010010 (1,2)
01F4 F53B            428                                                     MOV 3Bh, A                       ;         
                                                                                                                        
                                                                                                 R4 : 00110100 (3,4)
01F6 E9              429                                                     MOV  A, R1
01F7 C4              430                                                     SWAP A
01F8 FB              431                                                     MOV  R3, A
01F9 B80107          432     code2:                                  CJNE R0, #01h, code3
01FC E532            433                                                     MOV A, 32h
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     8

01FE F53A            434                                                     MOV 3Ah, A
0200 E9              435                                                     MOV  A, R1                      ;second num
                             ber of the code
0201 2B              436                                                     ADD  A, R3
0202 FB              437                                                     MOV  R3, A
0203 B80207          438     code3:                                  CJNE R0, #02h, code4
0206 E532            439                                                     MOV A, 32h
0208 F539            440                                                     MOV 39h, A
020A E9              441                                                     MOV  A, R1                      ;third
020B C4              442                                                     SWAP A
020C FA              443                                                     MOV  R2, A
020D B8030A          444     code4:                                  CJNE R0, #03h, incR0
0210 E532            445                                                     MOV A, 32h
0212 F538            446                                                     MOV 38h, A
0214 E9              447                                                     MOV  A, R1                      ;fourth
0215 2A              448                                                     ADD  A, R2
0216 FA              449                                                     MOV  R2, A
0217 02021E          450                                                     LJMP checkCode
                     451     
021A 08              452     incR0:                                  INC R0                          ; increment the cou
                             nter of button pressed
021B 020259          453                                                     LJMP endKeyboardISR
                     454     
021E 7800            455     checkCode:                              MOV R0, #00h
0220 EC              456                                                     MOV A,R4
0221 6A              457                                                     XRL A,R2
0222 F4              458                                                     CPL A    ;XNOR to check that R4 and R2 are 
                             the same (if 11111111b)
0223 B4FF1B          459                                                     CJNE A, #0FFh, wrong ;check if code == main
                              code otherwise wrong
0226 ED              460                                                     MOV A,R5
0227 6B              461                                                     XRL A,R3 ;same XNOR for R3,R5
0228 F4              462                                                     CPL A
0229 B4FF15          463                                                     CJNE A, #0FFh, wrong
022C C2A4            464                                                     CLR P2.4 ;debug only
022E BE0007          465                                                     CJNE R6, #00h, desactivate ; if alarm activ
                             ated, desactivate it
0231 7E01            466                                                     MOV R6, #01h ; otherwise, activate it (prea
                             larm before actually set on)
0233 7FE1            467                                                     MOV R7, #0E1h ; put 15 seconds of period in
                              the counter before prealarm => alarm (counter at 225 with 15Hz)
0235 020259          468                                                     LJMP endKeyboardISR
                     469     
0238 7E00            470     desactivate:                    MOV R6, #00h
023A 7F00            471                                                     MOV R7, #00h ; reset the counter if the ala
                             rm is desactivate
023C D2A3            472                                                     SETB P2.3 ;debug
023E 020259          473                                                     LJMP endKeyboardISR
                     474     
0241                 475     wrong:                                  ; SHOW WITH SCREEN OR LED ITS WRONG
0241 020244          476                                                     LJMP clearcode
                     477     
0244 7A00            478     clearcode:                              MOV R2, #00h
0246 7B00            479                                                     MOV R3, #00h
0248 7800            480                                                     MOV R0, #00h
024A 90036A          481                                                     MOV DPTR, #KeyUS ; reset screen data
024D E0              482                                                     MOVX A, @DPTR
024E F53B            483                                                     MOV 3Bh, A
0250 F53A            484                                                     MOV 3Ah, A
0252 F539            485                                                     MOV 39h, A
0254 F538            486                                                     MOV 38h, A
0256 020259          487                                                     LJMP endKeyboardISR
                     488     
0259 758D0B          489     endKeyboardISR:                 MOV TH1,#0Bh
025C 758BDB          490                                                     MOV TL1,#0DBh
025F D0E0            491                                                     POP ACC
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE     9

0261 D0D0            492                                                     POP PSW
0263 32              493                                                     RETI
                     494     
                     495     
                     496     ;------------------------------------   EXT INTERRUPT (PIR SENSOR)   ----------------------
                             ----------------------------
0264 C0D0            497     extISR:                                 PUSH PSW ; STILL HAVE TO TEST PIR SENSOR AND CONFIG
                             URE THE ISR CORRECTLY
0266 C0E0            498                                                     PUSH ACC
0268 BE0108          499                                                     CJNE R6, #01h, endExtISR ;if alarm is not O
                             FF : end
026B 02026E          500                                                     LJMP detection
                     501     
026E 7FE1            502     detection:                              MOV R7, #0E1h ; set counter to 225 to go to 15s
0270 020273          503                                                     LJMP endExtISR
                     504     
0273 D0E0            505     endExtISR:                              POP ACC
0275 D0D0            506                                                     POP PSW
0277 32              507                                                     RETI
                     508     
                     509     ;------------------------------------   DISPLAY   -----------------------------------------
                             ---------
0278 C0D0            510     screenISR:                              PUSH PSW
027A C0E0            511                                                     PUSH ACC
027C D2D4            512                                                     SETB RS1
027E D2D3            513                                                     SETB RS0
0280 C2C1            514                                                     CLR DATA_BITS
0282 C2C0            515                                                     CLR SHIFT
0284 C2B2            516                                                     CLR STORE
0286 C2A3            517                                                     CLR P2.3
0288 ED              518                                                     MOV A,R5 ; init = 0, its index of the block
                              we are dealing with
                     519                                                     ;SUBB A, #1; WATT ? R5 - R5 = 0 -> somethin
                             g wrong, should delete this line right?
0289 FC              520                                                     MOV R4,A
                     521     
028A 900362          522                                                     MOV DPTR, #KeyEmpty ; first some empty bloc
                             ks
                     523     
028D BC0003          524                                                     CJNE R4, #0, loop4a ; if R4 = 0 skip this l
                             oop !
0290 0202A9          525                                                     LJMP skip
                     526                                                     ; loop on number of repeated pattern
0293 EE              527     loop4a:                                 MOV A, R6 ; R6 is an index for the used row
0294 B40704          528                                                     CJNE A,#7, column_dispa ; reset row index w
                             hen complete
0297 7400            529     reseta:                                 MOV A, #0
0299 7E00            530                                                     MOV R6, #0
                     531     
029B 93              532     column_dispa:                   MOVC A, @A+DPTR
029C 7B05            533                                                     MOV R3, #5
                     534                                                     ;each column bit (one by one)
029E 13              535     loop3a:                                 RRC A ;right shift
029F 92C1            536                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02A1 C2C0            537                                                     CLR SHIFT ;shift register
02A3 D2C0            538                                                     SETB SHIFT
02A5 DBF7            539                                                     DJNZ R3, loop3a
                     540     
02A7 DCEA            541                                                     DJNZ R4, loop4a
                     542     
                     543                                                     ;now display the wanted value
02A9 900312          544     skip:                                   MOV DPTR, #Key0 ;start index at Key0
                     545                                                     ;MOV R4, #1 ; repeat pattern N times NO NEE
                             D
                     546                                                     ; number of repeated pattern
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE    10

02AC EE              547     loop4b:                                 MOV A, R6 ; R6 is an index for the used row
02AD B40704          548                                                     CJNE A,#7, column_dispb ; reset row index w
                             hen complete
02B0 7E00            549     resetb:                                 MOV R6, #0
02B2 7400            550                                                     MOV A, #0
02B4 2538            551     column_dispb:                   ADD A, 38h
02B6 93              552                                                     MOVC A, @A+DPTR
02B7 7B05            553                                                     MOV R3, #5
                     554                                                     ;each column bit (one by one)
02B9 13              555     loop3b:                                 RRC A ;right shift
02BA 92C1            556                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02BC C2C0            557                                                     CLR SHIFT ;shift register
02BE D2C0            558                                                     SETB SHIFT
02C0 DBF7            559                                                     DJNZ R3, loop3b
                     560     
                     561                                                     ;DJNZ R4, loop4b NO NEED
                     562     
02C2 7407            563                                                     MOV A, #07h
02C4 9D              564                                                     SUBB A,R5  ; number of empty block at left:
                              8 : MUST BE CHANGED
02C5 FC              565                                                     MOV R4,A
02C6 900362          566                                                     MOV DPTR, #KeyEmpty
                     567     
                     568                                                     ; number of repeated pattern
02C9 EE              569     loop4c:                                 MOV A, R6 ; R6 is an index for the used row
02CA B40704          570                                                     CJNE A,#7, column_dispc ; reset row index w
                             hen complete
02CD 7400            571     resetc:                                 MOV A, #0
02CF 7E00            572                                                     MOV R6, #0
                     573     
02D1 93              574     column_dispc:                   MOVC A, @A+DPTR
02D2 7B05            575                                                     MOV R3, #5
                     576                                                     ;each column bit (one by one)
02D4 13              577     loop3c:                                 RRC A ;right shift
02D5 92C1            578                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02D7 C2C0            579                                                     CLR SHIFT ;shift register
02D9 D2C0            580                                                     SETB SHIFT
02DB DBF7            581                                                     DJNZ R3, loop3c
                     582     
02DD DCEA            583                                                     DJNZ R4, loop4c
                     584     
                     585                                                     ;loop on the lines
02DF 90030B          586                                                     MOV DPTR, #lines
02E2 EE              587                                                     MOV A, R6
02E3 93              588                                                     MOVC A, @A+DPTR
                     589     
02E4 7A08            590                                                     MOV R2, #8
02E6 13              591     loop2:                                  RRC A
02E7 92C1            592                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02E9 C2C0            593                                                     CLR SHIFT ;shift register
02EB D2C0            594                                                     SETB SHIFT
02ED DAF7            595                                                     DJNZ R2,loop2
                     596     
02EF C2B2            597                                                     CLR STORE
02F1 D2B2            598                                                     SETB STORE ; store
02F3 C2B2            599                                                     CLR STORE
                     600     
02F5 0E              601                                                     INC R6
02F6 0D              602                                                     INC R5; increment the counter of Blocks
02F7 BD0802          603                                                     CJNE R5, #8, endScreenISR
02FA 7D00            604                                                     MOV R5, #0
                     605                                                     
02FC C2D3            606     endScreenISR:                   CLR RS0
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE    11

02FE C2D4            607                                                     CLR RS1
0300 75CDFB          608                                                     MOV TH2,#0FBh
0303 75CC8F          609                                                     MOV TL2,#08Fh
0306 D0E0            610                                                     POP ACC
0308 D0D0            611                                                     POP PSW
030A 32              612                                                     RETI
                     613     
                     614     ;;------------------------------------   CODE MEM DATA   ----------------------------------
                             ----------------
                     615     
030B 7F              616     lines:          DB 01111111b ; pattern to easily follow lines
030C BF              617                             DB 10111111b
030D DF              618                             DB 11011111b
030E EF              619                             DB 11101111b
030F F7              620                             DB 11110111b
0310 FB              621                             DB 11111011b
0311 FD              622                             DB 11111101b
0312 19              623     Key0:           DB 11001b
0313 16              624                             DB 10110b
0314 16              625                             DB 10110b
0315 16              626                             DB 10110b
0316 16              627                             DB 10110b
0317 16              628                             DB 10110b
0318 19              629                             DB 11001b
0319 00              630                             DB 00000b
031A 1D              631     Key1:           DB 11101b
031B 19              632                             DB 11001b
031C 1D              633                             DB 11101b
031D 1D              634                             DB 11101b
031E 1D              635                             DB 11101b
031F 1D              636                             DB 11101b
0320 18              637                             DB 11000b
0321 00              638                             DB 00000b
0322 19              639     Key2:           DB 11001b
0323 16              640                             DB 10110b
0324 1E              641                             DB 11110b
0325 19              642                             DB 11001b
0326 17              643                             DB 10111b
0327 16              644                             DB 10110b
0328 19              645                             DB 11001b
0329 00              646                             DB 00000b
032A 19              647     Key3:           DB 11001b
032B 16              648                             DB 10110b
032C 1E              649                             DB 11110b
032D 11              650                             DB 10001b
032E 1E              651                             DB 11110b
032F 16              652                             DB 10110b
0330 19              653                             DB 11001b
0331 00              654                             DB 00000b
0332 1D              655     Key4:           DB 11101b
0333 19              656                             DB 11001b
0334 15              657                             DB 10101b
0335 15              658                             DB 10101b
0336 10              659                             DB 10000b
0337 1D              660                             DB 11101b
0338 1D              661                             DB 11101b
0339 00              662                             DB 00000b
033A 19              663     Key5:           DB 11001b
033B 16              664                             DB 10110b
033C 17              665                             DB 10111b
033D 19              666                             DB 11001b
033E 1E              667                             DB 11110b
033F 16              668                             DB 10110b
0340 19              669                             DB 11001b
0341 00              670                             DB 00000b
0342 19              671     Key6:           DB 11001b
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE    12

0343 16              672                             DB 10110b
0344 17              673                             DB 10111b
0345 19              674                             DB 11001b
0346 16              675                             DB 10110b
0347 16              676                             DB 10110b
0348 19              677                             DB 11001b
0349 00              678                             DB 00000b
034A 19              679     Key7:           DB 11001b
034B 16              680                             DB 10110b
034C 1E              681                             DB 11110b
034D 18              682                             DB 11000b
034E 1E              683                             DB 11110b
034F 1E              684                             DB 11110b
0350 1E              685                             DB 11110b
0351 00              686                             DB 00000b
0352 19              687     Key8:           DB 11001b
0353 16              688                             DB 10110b
0354 16              689                             DB 10110b
0355 19              690                             DB 11001b
0356 16              691                             DB 10110b
0357 16              692                             DB 10110b
0358 19              693                             DB 11001b
0359 00              694                             DB 00000b
035A 19              695     Key9:           DB 11001b
035B 16              696                             DB 10110b
035C 16              697                             DB 10110b
035D 19              698                             DB 11001b
035E 1E              699                             DB 11110b
035F 16              700                             DB 10110b
0360 19              701                             DB 11001b
0361 00              702                             DB 00000b
0362 1F              703     KeyEmpty:       DB 11111b
0363 1F              704                             DB 11111b
0364 1F              705                             DB 11111b
0365 1F              706                             DB 11111b
0366 1F              707                             DB 11111b
0367 1F              708                             DB 11111b
0368 1F              709                             DB 11111b
0369 00              710                             DB 00000b
036A 1F              711     KeyUS:          DB 11111b
036B 1F              712                             DB 11111b
036C 1F              713                             DB 11111b
036D 1F              714                             DB 11111b
036E 1F              715                             DB 11111b
036F 1F              716                             DB 11111b
0370 10              717                             DB 10000b
0371 00              718                             DB 00000b
                     719     end
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE    13

SYMBOL TABLE LISTING
------ ----- -------


N A M E              T Y P E  V A L U E   ATTRIBUTES

AC. . . . . . . . .  B ADDR   00D0H.6 A   
ACC . . . . . . . .  D ADDR   00E0H   A   
ACTIVATION. . . . .  C ADDR   00A4H   A   
ADCF. . . . . . . .  D ADDR   00F6H   A   
ADCLK . . . . . . .  D ADDR   00F2H   A   
ADCON . . . . . . .  D ADDR   00F3H   A   
ADDH. . . . . . . .  D ADDR   00F5H   A   
ADDL. . . . . . . .  D ADDR   00F4H   A   
AUXR. . . . . . . .  D ADDR   008EH   A   
AUXR1 . . . . . . .  D ADDR   00A2H   A   
B . . . . . . . . .  D ADDR   00F0H   A   
CANBT1. . . . . . .  D ADDR   00B4H   A   
CANBT2. . . . . . .  D ADDR   00B5H   A   
CANBT3. . . . . . .  D ADDR   00B6H   A   
CANCONCH. . . . . .  D ADDR   00B3H   A   
CANEN1. . . . . . .  D ADDR   00CEH   A   
CANEN2. . . . . . .  D ADDR   00CFH   A   
CANGCON . . . . . .  D ADDR   00ABH   A   
CANGIE. . . . . . .  D ADDR   00C1H   A   
CANGIT. . . . . . .  D ADDR   009BH   A   
CANGSTA . . . . . .  D ADDR   00AAH   A   
CANIDM1 . . . . . .  D ADDR   00C4H   A   
CANIDM2 . . . . . .  D ADDR   00C5H   A   
CANIDM3 . . . . . .  D ADDR   00C6H   A   
CANIDM4 . . . . . .  D ADDR   00C7H   A   
CANIDT1 . . . . . .  D ADDR   00BCH   A   
CANIDT2 . . . . . .  D ADDR   00BDH   A   
CANIDT3 . . . . . .  D ADDR   00BEH   A   
CANIDT4 . . . . . .  D ADDR   00BFH   A   
CANIE1. . . . . . .  D ADDR   00C2H   A   
CANIE2. . . . . . .  D ADDR   00C3H   A   
CANMSG. . . . . . .  D ADDR   00A3H   A   
CANPAGE . . . . . .  D ADDR   00B1H   A   
CANREC. . . . . . .  D ADDR   009DH   A   
CANSIT1 . . . . . .  D ADDR   00BAH   A   
CANSIT2 . . . . . .  D ADDR   00BBH   A   
CANSTCH . . . . . .  D ADDR   00B2H   A   
CANSTMPH. . . . . .  D ADDR   00AFH   A   
CANSTMPL. . . . . .  D ADDR   00AEH   A   
CANTCON . . . . . .  D ADDR   00A1H   A   
CANTEC. . . . . . .  D ADDR   009CH   A   
CANTIMH . . . . . .  D ADDR   00ADH   A   
CANTIML . . . . . .  D ADDR   00ACH   A   
CANTTCH . . . . . .  D ADDR   00A5H   A   
CANTTCL . . . . . .  D ADDR   00A4H   A   
CCAP0H. . . . . . .  D ADDR   00FAH   A   
CCAP0L. . . . . . .  D ADDR   00EAH   A   
CCAP1H. . . . . . .  D ADDR   00FBH   A   
CCAP1L. . . . . . .  D ADDR   00EBH   A   
CCAP2H. . . . . . .  D ADDR   00FCH   A   
CCAP2L. . . . . . .  D ADDR   00ECH   A   
CCAP3H. . . . . . .  D ADDR   00FDH   A   
CCAP3L. . . . . . .  D ADDR   00EDH   A   
CCAP4H. . . . . . .  D ADDR   00FEH   A   
CCAP4L. . . . . . .  D ADDR   00EEH   A   
CCAPM0. . . . . . .  D ADDR   00DAH   A   
CCAPM1. . . . . . .  D ADDR   00DBH   A   
CCAPM2. . . . . . .  D ADDR   00DCH   A   
CCAPM3. . . . . . .  D ADDR   00DDH   A   
CCAPM4. . . . . . .  D ADDR   00DEH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE    14

CCF0. . . . . . . .  B ADDR   00D0H.0 A   
CCF1. . . . . . . .  B ADDR   00D0H.1 A   
CCF2. . . . . . . .  B ADDR   00D0H.2 A   
CCF3. . . . . . . .  B ADDR   00D0H.3 A   
CCF4. . . . . . . .  B ADDR   00D0H.4 A   
CCON. . . . . . . .  D ADDR   00D8H   A   
CF. . . . . . . . .  B ADDR   00D8H.7 A   
CH. . . . . . . . .  D ADDR   00F9H   A   
CHECKCODE . . . . .  C ADDR   021EH   A   
CKCON . . . . . . .  D ADDR   008FH   A   
CL. . . . . . . . .  D ADDR   00E9H   A   
CLEARCODE . . . . .  C ADDR   0244H   A   
CMOD. . . . . . . .  D ADDR   00D9H   A   
CODE2 . . . . . . .  C ADDR   01F9H   A   
CODE3 . . . . . . .  C ADDR   0203H   A   
CODE4 . . . . . . .  C ADDR   020DH   A   
COLUMN_DISPA. . . .  C ADDR   029BH   A   
COLUMN_DISPB. . . .  C ADDR   02B4H   A   
COLUMN_DISPC. . . .  C ADDR   02D1H   A   
CONTINUE. . . . . .  C ADDR   01ECH   A   
CP_RL2. . . . . . .  B ADDR   00C8H.0 A   
CR. . . . . . . . .  B ADDR   00D8H.6 A   
CY. . . . . . . . .  B ADDR   00D0H.7 A   
C_T2. . . . . . . .  B ADDR   00C8H.1 A   
DATA_BITS . . . . .  B ADDR   00C0H.1 A   
DESACTIVATE . . . .  C ADDR   0238H   A   
DETECTION . . . . .  C ADDR   026EH   A   
DICHOTOMY00 . . . .  C ADDR   00C8H   A   
DICHOTOMY00ONE. . .  C ADDR   013EH   A   
DICHOTOMY00ZERO . .  C ADDR   0100H   A   
DICHOTOMY01 . . . .  C ADDR   00D6H   A   
DICHOTOMY01ONE. . .  C ADDR   014CH   A   
DICHOTOMY01ZERO . .  C ADDR   010EH   A   
DICHOTOMY02 . . . .  C ADDR   00E4H   A   
DICHOTOMY02ONE. . .  C ADDR   015AH   A   
DICHOTOMY02ZERO . .  C ADDR   011CH   A   
DICHOTOMY03 . . . .  C ADDR   00F2H   A   
DICHOTOMY03ONE. . .  C ADDR   016EH   A   
DICHOTOMY03ZERO . .  C ADDR   012AH   A   
DPH . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . .  B ADDR   00A8H.7 A   
EADC. . . . . . . .  B ADDR   00E8H.1 A   
EC. . . . . . . . .  B ADDR   00A8H.6 A   
ECAN. . . . . . . .  B ADDR   00E8H.0 A   
EECON . . . . . . .  D ADDR   00D2H   A   
EIGHT . . . . . . .  C ADDR   01BCH   A   
ENDEXTISR . . . . .  C ADDR   0273H   A   
ENDKEYBOARDISR. . .  C ADDR   0259H   A   
ENDSCREENISR. . . .  C ADDR   02FCH   A   
ENTERCODE . . . . .  C ADDR   01E4H   A   
ES. . . . . . . . .  B ADDR   00A8H.4 A   
ET0 . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . .  B ADDR   00A8H.3 A   
ET2 . . . . . . . .  B ADDR   00A8H.5 A   
ETIM. . . . . . . .  B ADDR   00E8H.2 A   
EX0 . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . .  B ADDR   00A8H.2 A   
EXEN2 . . . . . . .  B ADDR   00C8H.3 A   
EXF2. . . . . . . .  B ADDR   00C8H.6 A   
EXTISR. . . . . . .  C ADDR   0264H   A   
F0. . . . . . . . .  B ADDR   00D0H.5 A   
FCON. . . . . . . .  D ADDR   00D1H   A   
FE. . . . . . . . .  B ADDR   0098H.7 A   
FIVE. . . . . . . .  C ADDR   01A4H   A   
FOUR. . . . . . . .  C ADDR   019CH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE    15

FPGACON . . . . . .  D ADDR   00F1H   A   
IE0 . . . . . . . .  B ADDR   0088H.1 A   
IE1 . . . . . . . .  B ADDR   0088H.3 A   
IEN0. . . . . . . .  D ADDR   00A8H   A   
IEN1. . . . . . . .  D ADDR   00E8H   A   
INCR0 . . . . . . .  C ADDR   021AH   A   
INIT. . . . . . . .  C ADDR   002EH   A   
INT0. . . . . . . .  B ADDR   00B0H.2 A   
INT1. . . . . . . .  B ADDR   00B0H.3 A   
INTERMEDIATELETTERA  C ADDR   0168H   A   
INTERMEDIATELETTERB  C ADDR   013BH   A   
INTERMEDIATELETTERC  C ADDR   0138H   A   
INTERMEDIATELETTERE  C ADDR   016BH   A   
IPH0. . . . . . . .  D ADDR   00B7H   A   
IPH1. . . . . . . .  D ADDR   00F7H   A   
IPL0. . . . . . . .  D ADDR   00B8H   A   
IPL1. . . . . . . .  D ADDR   00F8H   A   
IT0 . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . .  B ADDR   0088H.2 A   
KEY0. . . . . . . .  C ADDR   0312H   A   
KEY1. . . . . . . .  C ADDR   031AH   A   
KEY2. . . . . . . .  C ADDR   0322H   A   
KEY3. . . . . . . .  C ADDR   032AH   A   
KEY4. . . . . . . .  C ADDR   0332H   A   
KEY5. . . . . . . .  C ADDR   033AH   A   
KEY6. . . . . . . .  C ADDR   0342H   A   
KEY7. . . . . . . .  C ADDR   034AH   A   
KEY8. . . . . . . .  C ADDR   0352H   A   
KEY9. . . . . . . .  C ADDR   035AH   A   
KEYBOARDISR . . . .  C ADDR   00B0H   A   
KEYEMPTY. . . . . .  C ADDR   0362H   A   
KEYUS . . . . . . .  C ADDR   036AH   A   
LETTERA . . . . . .  C ADDR   01CCH   A   
LETTERB . . . . . .  C ADDR   01CFH   A   
LETTERC . . . . . .  C ADDR   01D2H   A   
LETTERD . . . . . .  C ADDR   01D5H   A   
LETTERE . . . . . .  C ADDR   01D8H   A   
LETTERF . . . . . .  C ADDR   01DBH   A   
LINES . . . . . . .  C ADDR   030BH   A   
LOOP2 . . . . . . .  C ADDR   02E6H   A   
LOOP3A. . . . . . .  C ADDR   029EH   A   
LOOP3B. . . . . . .  C ADDR   02B9H   A   
LOOP3C. . . . . . .  C ADDR   02D4H   A   
LOOP4A. . . . . . .  C ADDR   0293H   A   
LOOP4B. . . . . . .  C ADDR   02ACH   A   
LOOP4C. . . . . . .  C ADDR   02C9H   A   
MAIN. . . . . . . .  C ADDR   008FH   A   
NEXT. . . . . . . .  C ADDR   0095H   A   
NINE. . . . . . . .  C ADDR   01C4H   A   
NOTHING . . . . . .  C ADDR   01DEH   A   
ONE . . . . . . . .  C ADDR   0184H   A   
OV. . . . . . . . .  B ADDR   00D0H.2 A   
P . . . . . . . . .  B ADDR   00D0H.0 A   
P0. . . . . . . . .  D ADDR   0080H   A   
P1. . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . .  D ADDR   00B0H   A   
P4. . . . . . . . .  D ADDR   00C0H   A   
PCON. . . . . . . .  D ADDR   0087H   A   
PSW . . . . . . . .  D ADDR   00D0H   A   
RB8 . . . . . . . .  B ADDR   0098H.2 A   
RCAP2H. . . . . . .  D ADDR   00CBH   A   
RCAP2L. . . . . . .  D ADDR   00CAH   A   
RCLK. . . . . . . .  B ADDR   00C8H.5 A   
RD. . . . . . . . .  B ADDR   00B0H.7 A   
REN . . . . . . . .  B ADDR   0098H.4 A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2016 19:20:41 PAGE    16

RESETA. . . . . . .  C ADDR   0297H   A   
RESETB. . . . . . .  C ADDR   02B0H   A   
RESETC. . . . . . .  C ADDR   02CDH   A   
RI. . . . . . . . .  B ADDR   0098H.0 A   
RS0 . . . . . . . .  B ADDR   00D0H.3 A   
RS1 . . . . . . . .  B ADDR   00D0H.4 A   
RXD . . . . . . . .  B ADDR   00B0H.0 A   
SADDR . . . . . . .  D ADDR   00A9H   A   
SADEN . . . . . . .  D ADDR   00B9H   A   
SBUF. . . . . . . .  D ADDR   0099H   A   
SCON. . . . . . . .  D ADDR   0098H   A   
SCREAM. . . . . . .  C ADDR   00AAH   A   
SCREENISR . . . . .  C ADDR   0278H   A   
SEVEN . . . . . . .  C ADDR   01B4H   A   
SHIFT . . . . . . .  B ADDR   00C0H.0 A   
SIX . . . . . . . .  C ADDR   01ACH   A   
SKIP. . . . . . . .  C ADDR   02A9H   A   
SM0 . . . . . . . .  B ADDR   0098H.7 A   
SM1 . . . . . . . .  B ADDR   0098H.6 A   
SM2 . . . . . . . .  B ADDR   0098H.5 A   
SP. . . . . . . . .  D ADDR   0081H   A   
STORE . . . . . . .  B ADDR   00B0H.2 A   
T0. . . . . . . . .  B ADDR   00B0H.4 A   
T1. . . . . . . . .  B ADDR   00B0H.5 A   
T2CON . . . . . . .  D ADDR   00C8H   A   
T2MOD . . . . . . .  D ADDR   00C9H   A   
TB8 . . . . . . . .  B ADDR   0098H.3 A   
TCLK. . . . . . . .  B ADDR   00C8H.4 A   
TCON. . . . . . . .  D ADDR   0088H   A   
TF0 . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . .  B ADDR   0088H.7 A   
TF2 . . . . . . . .  B ADDR   00C8H.7 A   
TH0 . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . .  D ADDR   008DH   A   
TH2 . . . . . . . .  D ADDR   00CDH   A   
THREE . . . . . . .  C ADDR   0194H   A   
TI. . . . . . . . .  B ADDR   0098H.1 A   
TL0 . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . .  D ADDR   008BH   A   
TL2 . . . . . . . .  D ADDR   00CCH   A   
TMOD. . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . .  B ADDR   0088H.6 A   
TR2 . . . . . . . .  B ADDR   00C8H.2 A   
TWO . . . . . . . .  C ADDR   018CH   A   
TXD . . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG. . . . . . .  D ADDR   00A7H   A   
WDTRST. . . . . . .  D ADDR   00A6H   A   
WR. . . . . . . . .  B ADDR   00B0H.6 A   
WRONG . . . . . . .  C ADDR   0241H   A   
ZERO. . . . . . . .  C ADDR   017CH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
