A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;$include (t89c51cc01.inc)
                +1     2     ;*INC*************************************************************************
                +1     3     ; NAME: 89C51CC01.inc           
                +1     4     ;----------------------------------------------------------------------------
                +1     5     ; PURPOSE: for Keil
                +1     6     ;*****************************************************************************
                +1     7     
                +1     8     ;----------------------------------------
                +1     9     ; Include file for 8051 SFR Definitions  
                +1    10     ;----------------------------------------
                +1    11     
                +1    12     ;  BYTE Register 
  0080          +1    13     P0      DATA    80H
  0090          +1    14     P1      DATA    90H
  00A0          +1    15     P2      DATA    0A0H
                +1    16     
  00B0          +1    17     P3      DATA    0B0H
  00B7          +1    18     RD      BIT     0B7H
  00B6          +1    19     WR      BIT     0B6H
  00B5          +1    20     T1      BIT     0B5H
  00B4          +1    21     T0      BIT     0B4H
  00B3          +1    22     INT1    BIT     0B3H
  00B2          +1    23     INT0    BIT     0B2H
  00B1          +1    24     TXD     BIT     0B1H
  00B0          +1    25     RXD     BIT     0B0H
                +1    26     
  00C0          +1    27     P4      DATA    0C0H
                +1    28     
  00D0          +1    29     PSW     DATA    0D0H
  00D7          +1    30     CY      BIT     0D7H
  00D6          +1    31     AC      BIT     0D6H
  00D5          +1    32     F0      BIT     0D5H
  00D4          +1    33     RS1     BIT     0D4H
  00D3          +1    34     RS0     BIT     0D3H
  00D2          +1    35     OV      BIT     0D2H
  00D0          +1    36     P       BIT     0D0H
                +1    37     
  00E0          +1    38     ACC     DATA    0E0H
  00F0          +1    39     B       DATA    0F0H
  0081          +1    40     SP      DATA    81H
  0082          +1    41     DPL     DATA    82H
  0083          +1    42     DPH     DATA    83H
  0087          +1    43     PCON    DATA    87H
  008F          +1    44     CKCON   DATA    8FH
                +1    45     
                +1    46     ;------------------ TIMERS registers ---------------------
  0088          +1    47     TCON    DATA    88H
  008F          +1    48     TF1     BIT     8FH
  008E          +1    49     TR1     BIT     8EH
  008D          +1    50     TF0     BIT     8DH
  008C          +1    51     TR0     BIT     8CH
  008B          +1    52     IE1     BIT     8BH
  008A          +1    53     IT1     BIT     8AH
  0089          +1    54     IE0     BIT     89H
  0088          +1    55     IT0     BIT     88H
                +1    56             
  0089          +1    57     TMOD    DATA    89H
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     2

                +1    58     
  00C8          +1    59     T2CON   DATA    0C8H
  00CF          +1    60     TF2     BIT     0CFH
  00CE          +1    61     EXF2    BIT     0CEH
  00CD          +1    62     RCLK    BIT     0CDH
  00CC          +1    63     TCLK    BIT     0CCH
  00CB          +1    64     EXEN2   BIT     0CBH
  00CA          +1    65     TR2     BIT     0CAH
  00C9          +1    66     C_T2    BIT     0C9H
  00C8          +1    67     CP_RL2  BIT     0C8H
                +1    68             
  00C9          +1    69     T2MOD   DATA    0C9H    
  008A          +1    70     TL0     DATA    8AH
  008B          +1    71     TL1     DATA    8BH
  00CC          +1    72     TL2     DATA    0CCH
  008C          +1    73     TH0     DATA    8CH
  008D          +1    74     TH1     DATA    8DH
  00CD          +1    75     TH2     DATA    0CDH    
  00CA          +1    76     RCAP2L  DATA    0CAH    
  00CB          +1    77     RCAP2H  DATA    0CBH    
  00A6          +1    78     WDTRST  DATA    0A6H    
  00A7          +1    79     WDTPRG  DATA    0A7H    
                +1    80     
                +1    81     
                +1    82     ;------------------- UART registers ------------------------
  0098          +1    83     SCON    DATA    98H
  009F          +1    84     SM0     BIT     9FH
  009F          +1    85     FE      BIT     9FH
  009E          +1    86     SM1     BIT     9EH
  009D          +1    87     SM2     BIT     9DH
  009C          +1    88     REN     BIT     9CH
  009B          +1    89     TB8     BIT     9BH
  009A          +1    90     RB8     BIT     9AH
  0099          +1    91     TI      BIT     99H
  0098          +1    92     RI      BIT     98H
                +1    93     
  0099          +1    94     SBUF    DATA    99H
  00B9          +1    95     SADEN   DATA    0B9H
  00A9          +1    96     SADDR   DATA    0A9H    
                +1    97     
                +1    98     ;-------------------- ADC registers ----------------------
  00F2          +1    99     ADCLK   DATA    0F2H    
  00F3          +1   100     ADCON   DATA    0F3H    
  00F4          +1   101     ADDL    DATA    0F4H    
  00F5          +1   102     ADDH    DATA    0F5H    
  00F6          +1   103     ADCF    DATA    0F6H    
                +1   104     
                +1   105     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   106     FPGACON  DATA   0F1H    
  00D1          +1   107     FCON    DATA    0D1H    
  00D2          +1   108     EECON   DATA    0D2H    
  008E          +1   109     AUXR    DATA    8EH
  00A2          +1   110     AUXR1   DATA    0A2H
                +1   111     
                +1   112     ;-------------------- IT registers -----------------------
  00F8          +1   113     IPL1    DATA    0F8H    
  00F7          +1   114     IPH1    DATA    0F7H    
  00A8          +1   115     IEN0    DATA    0A8H    
  00B8          +1   116     IPL0    DATA    0B8H    
  00B7          +1   117     IPH0    DATA    0B7H    
  00E8          +1   118     IEN1    DATA    0E8H    
                +1   119     
                +1   120     ;  IEN0  
  00AF          +1   121     EA      BIT     0AFH
  00AE          +1   122     EC      BIT     0AEH
  00AD          +1   123     ET2     BIT     0ADH
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     3

  00AC          +1   124     ES      BIT     0ACH
  00AB          +1   125     ET1     BIT     0ABH
  00AA          +1   126     EX1     BIT     0AAH
  00A9          +1   127     ET0     BIT     0A9H
  00A8          +1   128     EX0     BIT     0A8H
                +1   129     
                +1   130     ;  IEN1 
  00EA          +1   131     ETIM    BIT     0EAH
  00E9          +1   132     EADC    BIT     0E9H
  00E8          +1   133     ECAN    BIT     0E8H
                +1   134     
                +1   135     ;--------------------- PCA registers --------------------
  00D8          +1   136     CCON    DATA    0D8H    
  00DF          +1   137     CF              BIT             0DFH
  00DE          +1   138     CR              BIT             0DEH
  00D4          +1   139     CCF4    BIT             0D4H
  00D3          +1   140     CCF3    BIT             0D3H
  00D2          +1   141     CCF2    BIT             0D2H
  00D1          +1   142     CCF1    BIT             0D1H
  00D0          +1   143     CCF0    BIT             0D0H
                +1   144     
  00D9          +1   145     CMOD    DATA    0D9H    
  00F9          +1   146     CH      DATA    0F9H    
  00E9          +1   147     CL      DATA    0E9H    
  00FA          +1   148     CCAP0H  DATA    0FAH    
  00EA          +1   149     CCAP0L  DATA    0EAH    
  00DA          +1   150     CCAPM0  DATA    0DAH    
  00FB          +1   151     CCAP1H  DATA    0FBH    
  00EB          +1   152     CCAP1L  DATA    0EBH    
  00DB          +1   153     CCAPM1  DATA    0DBH    
  00FC          +1   154     CCAP2H  DATA    0FCH    
  00EC          +1   155     CCAP2L  DATA    0ECH    
  00DC          +1   156     CCAPM2  DATA    0DCH    
  00FD          +1   157     CCAP3H  DATA    0FDH    
  00ED          +1   158     CCAP3L  DATA    0EDH    
  00DD          +1   159     CCAPM3  DATA    0DDH    
  00FE          +1   160     CCAP4H  DATA    0FEH    
  00EE          +1   161     CCAP4L  DATA    0EEH    
  00DE          +1   162     CCAPM4  DATA    0DEH    
                +1   163     
                +1   164     ;------------------- CAN registers --------------------------
  009B          +1   165     CANGIT          DATA    09BH
  009C          +1   166     CANTEC          DATA    09CH
  009D          +1   167     CANREC          DATA    09DH
  00A1          +1   168     CANTCON         DATA    0A1H    
  00A3          +1   169     CANMSG          DATA    0A3H    
  00A4          +1   170     CANTTCL         DATA    0A4H    
  00A5          +1   171     CANTTCH         DATA    0A5H    
  00AA          +1   172     CANGSTA         DATA    0AAH
  00AB          +1   173     CANGCON         DATA    0ABH
  00AC          +1   174     CANTIML         DATA    0ACH    
  00AD          +1   175     CANTIMH         DATA    0ADH    
  00AE          +1   176     CANSTMPL        DATA    0AEH    
  00AF          +1   177     CANSTMPH        DATA    0AFH
  00B1          +1   178     CANPAGE         DATA    0B1H
  00B2          +1   179     CANSTCH         DATA    0B2H    
  00B3          +1   180     CANCONCH        DATA    0B3H    
  00B4          +1   181     CANBT1          DATA    0B4H
  00B5          +1   182     CANBT2          DATA    0B5H
  00B6          +1   183     CANBT3          DATA    0B6H
  00BA          +1   184     CANSIT1         DATA    0BAH
  00BB          +1   185     CANSIT2         DATA    0BBH    
  00BC          +1   186     CANIDT1         DATA    0BCH
  00BD          +1   187     CANIDT2         DATA    0BDH    
  00BE          +1   188     CANIDT3         DATA    0BEH    
  00BF          +1   189     CANIDT4         DATA    0BFH    
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     4

  00C1          +1   190     CANGIE          DATA    0C1H
  00C2          +1   191     CANIE1          DATA    0C2H    
  00C3          +1   192     CANIE2          DATA    0C3H
  00C4          +1   193     CANIDM1         DATA    0C4H
  00C5          +1   194     CANIDM2         DATA    0C5H
  00C6          +1   195     CANIDM3         DATA    0C6H
  00C7          +1   196     CANIDM4         DATA    0C7H
  00CE          +1   197     CANEN1          DATA    0CEH
  00CF          +1   198     CANEN2          DATA    0CFH
                +1   199     
                +1   200     
                     201     
                     202     
                     203     ; DEFINITIONS
  00C0               204     SHIFT EQU P4.0
  00C1               205     DATA_BITS  EQU P4.1
  00B2               206     STORE EQU P3.2
                     207     
                     208     ;INIT ISRs
0000                 209     ORG 0000h
0000 02002E          210     LJMP init
000B                 211     ORG 000Bh
000B 02008F          212     LJMP keyboardISR ; timer 0
0013                 213     ORG 0013h
0013 020243          214     LJMP extISR ; ext interrupt 1
001B                 215     ORG 001Bh
001B 020257          216     LJMP mainISR ; timer 1
002B                 217     ORG 002Bh
002B 020287          218     LJMP screenISR ; timer 2
                     219     
                     220     
002E 758911          221     init:                                   MOV TMOD,#00010001b ; 16 bit mode for timer 0 and 1
                              
0031 758CFB          222                                                     MOV TH0,#0FBh ; MSB set 880Hz of timer 0 
0034 758A8F          223                                                     MOV TL0,#08Fh ; LSB same  for LSB
0037 758D0B          224                                                     MOV TH1, #0Bh ; about 15Hz for timer 1
003A 758BDB          225                                                     MOV TL1, #0DBh ;
003D 75CDFB          226                                                     MOV TH2,#0FBh 
0040 75CC8F          227                                                     MOV TL2,#08Fh 
0043 7C34            228                                                     MOV R4, #00110100b ; 2 LSD 4 first = 4, 4 n
                             ext = 3
0045 7D12            229                                                     MOV R5, #00010010b ; 2 MSD 4 next = 2, 4 ne
                             xt = 1 => code is 1234
0047 7800            230                                                     MOV R0, #00h
0049 7E00            231                                                     MOV R6, #00h
004B 75310F          232                                                     MOV 31h, #0Fh ; RAM byte addressable to sav
                             e previous state of keyboard (random initial value)
004E 75320F          233                                                     MOV 32h, #0Fh ; RAM byte addressable to sto
                             re temporarily "data pointer" for screen (random init value) 
                     234                                                     
0051 753858          235                                                     MOV 38h, #88
0054 753958          236                                                     MOV 39h, #88
0057 753A58          237                                                     MOV 3Ah, #88
005A 753B58          238                                                     MOV 3Bh, #88
005D 753C50          239                                                     MOV 3Ch, #80
0060 753D50          240                                                     MOV 3Dh, #80
0063 753E50          241                                                     MOV 3Eh, #80
0066 753F50          242                                                     MOV 3Fh, #80
                     243                                                     
0069 C2C1            244                                                     CLR DATA_BITS
006B C2C0            245                                                     CLR SHIFT
006D C2B2            246                                                     CLR STORE
006F D2D4            247                                                     SETB RS1 ; init some registers in register 
                             bank (1,1) for screen
0071 D2D3            248                                                     SETB RS0
0073 7E00            249                                                     MOV R6, #0
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     5

0075 E4              250                                                     CLR A
0076 7D00            251                                                     MOV R5, #0
0078 C2D4            252                                                     CLR RS1
007A C2D3            253                                                     CLR RS0
007C D2A9            254                                                     SETB ET0 ; enable timer 0 interrupt
007E D2AB            255                                                     SETB ET1 ; enable timer 1 interrupt
0080 D2AD            256                                                     SETB ET2 ; enable timer 2 interrupt
0082 D2AA            257                                                     SETB EX1 ; enable external interrupt 1
0084 D2AF            258                                                     SETB EA ; enable int
0086 D28C            259                                                     SETB TR0 ; enable timer 0, 1, 2
0088 D28E            260                                                     SETB TR1
008A D2CA            261                                                     SETB TR2
                     262                                                     
                     263     
                     264     
                     265     
                     266     
008C 02008C          267     main:                                   LJMP main
                     268     
                     269     
                     270     
                     271     
008F C0D0            272     keyboardISR:                    PUSH PSW ; review PSW, ACC and PUSH/POP !!!!
0091 C0E0            273                                                     PUSH ACC
0093 C2A3            274                                                     CLR P2.3 ; debug
0095 75800F          275                                                     MOV P0,#00001111b
                     276                                                     
0098 30800C          277                                                     JNB P0.0, dichotomy00
009B 308117          278                                                     JNB P0.1, dichotomy01
009E 308222          279                                                     JNB P0.2, dichotomy02
00A1 30832D          280                                                     JNB P0.3, dichotomy03
00A4 0201BD          281                                                     LJMP nothing
                     282                                                     
00A7 C284            283     dichotomy00:                    CLR P0.4
00A9 C285            284                                                     CLR P0.5
00AB D286            285                                                     SETB P0.6
00AD D287            286                                                     SETB P0.7
00AF 30802D          287                                                     JNB P0.0, dichotomy00zero
00B2 02011D          288                                                     LJMP dichotomy00one
                     289                                                     
00B5 C284            290     dichotomy01:                    CLR P0.4
00B7 C285            291                                                     CLR P0.5
00B9 D286            292                                                     SETB P0.6
00BB D287            293                                                     SETB P0.7
00BD 30812D          294                                                     JNB P0.1, dichotomy01zero
00C0 02012B          295                                                     LJMP dichotomy01one
                     296                                                     
00C3 C284            297     dichotomy02:                    CLR P0.4
00C5 C285            298                                                     CLR P0.5
00C7 D286            299                                                     SETB P0.6
00C9 D287            300                                                     SETB P0.7
00CB 30822D          301                                                     JNB P0.2, dichotomy02zero
00CE 020139          302                                                     LJMP dichotomy02one
                     303     
00D1 C284            304     dichotomy03:                    CLR P0.4
00D3 C285            305                                                     CLR P0.5
00D5 D286            306                                                     SETB P0.6
00D7 D287            307                                                     SETB P0.7
00D9 30832D          308                                                     JNB P0.3, dichotomy03zero
00DC 02014D          309                                                     LJMP dichotomy03one
                     310                                                     
00DF C284            311     dichotomy00zero:                CLR P0.4
00E1 D285            312                                                     SETB P0.5
00E3 C286            313                                                     CLR P0.6
00E5 D287            314                                                     SETB P0.7
00E7 30802D          315                                                     JNB P0.0, intermediateletterC
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     6

00EA 0201B4          316                                                     LJMP letterD
                     317                                                     
                     318                                                     
00ED C284            319     dichotomy01zero:                CLR P0.4
00EF D285            320                                                     SETB P0.5
00F1 C286            321                                                     CLR P0.6
00F3 D287            322                                                     SETB P0.7
00F5 308122          323                                                     JNB P0.1, intermediateletterB
00F8 020173          324                                                     LJMP three
                     325                                                     
00FB C284            326     dichotomy02zero:                CLR P0.4
00FD D285            327                                                     SETB P0.5
00FF C286            328                                                     CLR P0.6
0101 D287            329                                                     SETB P0.7
0103 308255          330                                                     JNB P0.2, zero
0106 02016B          331                                                     LJMP two
                     332                                                     
0109 C284            333     dichotomy03zero:                CLR P0.4
010B D285            334                                                     SETB P0.5
010D C286            335                                                     CLR P0.6
010F D287            336                                                     SETB P0.7
0111 308333          337                                                     JNB P0.3, intermediateletterA
0114 020163          338                                                     LJMP one
                     339     
0117 0201B1          340     intermediateletterC:    LJMP letterC ; too long jump otherwise
011A 0201AE          341     intermediateletterB:    LJMP letterB
                     342     
011D C284            343     dichotomy00one:                 CLR P0.4
011F D285            344                                                     SETB P0.5
0121 C286            345                                                     CLR P0.6
0123 D287            346                                                     SETB P0.7
0125 308022          347                                                     JNB P0.0, intermediateletterE
0128 0201BA          348                                                     LJMP letterF
                     349                                                     
012B C284            350     dichotomy01one:                 CLR P0.4
012D D285            351                                                     SETB P0.5
012F C286            352                                                     CLR P0.6
0131 D287            353                                                     SETB P0.7
0133 308155          354                                                     JNB P0.1, six
0136 0201A3          355                                                     LJMP nine
                     356                                                     
0139 C284            357     dichotomy02one:                 CLR P0.4
013B D285            358                                                     SETB P0.5
013D C286            359                                                     CLR P0.6
013F D287            360                                                     SETB P0.7
0141 30823F          361                                                     JNB P0.2, five
0144 02019B          362                                                     LJMP eight
                     363     
0147 0201AB          364     intermediateletterA:    LJMP letterA ; too long jump otherwise
014A 0201B7          365     intermediateletterE:    LJMP letterE
                     366     
014D C284            367     dichotomy03one:                 CLR P0.4
014F D285            368                                                     SETB P0.5
0151 C286            369                                                     CLR P0.6
0153 D287            370                                                     SETB P0.7
0155 308323          371                                                     JNB P0.3, four
0158 020193          372                                                     LJMP seven
                     373                                                     
015B 7900            374     zero:                                   MOV R1, #00h
015D 753200          375                                                     MOV 32h, #0 ; each code block has 8 lines s
                             o if we want key0, we start from key0+0, if key1 : key0+8 and so on
0160 0201C3          376                                                     LJMP entercode
0163 7901            377     one:                                    MOV R1, #01h
0165 753208          378                                                     MOV 32h, #8
0168 0201C3          379                                                     LJMP entercode
016B 7902            380     two:                                    MOV R1, #02h
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     7

016D 753210          381                                                     MOV 32h, #16
0170 0201C3          382                                                     LJMP entercode
0173 7903            383     three:                                  MOV R1, #03h
0175 753218          384                                                     MOV 32h, #24
0178 0201C3          385                                                     LJMP entercode
017B 7904            386     four:                                   MOV R1, #04h
017D 753220          387                                                     MOV 32h, #32
0180 0201C3          388                                                     LJMP entercode
0183 7905            389     five:                                   MOV R1, #05h
0185 753228          390                                                     MOV 32h, #40
0188 0201C3          391                                                     LJMP entercode
018B 7906            392     six:                                    MOV R1, #06h
018D 753230          393                                                     MOV 32h, #48
0190 0201C3          394                                                     LJMP entercode
0193 7907            395     seven:                                  MOV R1, #07h
0195 753238          396                                                     MOV 32h, #56
0198 0201C3          397                                                     LJMP entercode
019B 7908            398     eight:                                  MOV R1, #08h
019D 753222          399                                                     MOV 32h, #34
01A0 0201C3          400                                                     LJMP entercode
01A3 7909            401     nine:                                   MOV R1, #09h
01A5 753248          402                                                     MOV 32h, #72
01A8 0201C3          403                                                     LJMP entercode
01AB 020238          404     letterA:                                LJMP endKeyboardISR
01AE 020238          405     letterB:                                LJMP endKeyboardISR
01B1 020223          406     letterC:                                LJMP clearcode
01B4 020238          407     letterD:                                LJMP endKeyboardISR
01B7 020238          408     letterE:                                LJMP endKeyboardISR
01BA 020238          409     letterF:                                LJMP endKeyboardISR
01BD 75310F          410     nothing:                                MOV 31h,#0Fh ; if no button pressed : set the store
                             d value at a random value 0Fh
01C0 020238          411                                                     LJMP endKeyboardISR
                     412     
01C3 E531            413     entercode:                              MOV A,31h
01C5 B40F70          414                                                     CJNE A,#0Fh, endKeyboardISR ; the stored va
                             lue in 31h is used to debounce the keyboard
01C8 0201CB          415                                                     LJMP continue
01CB E9              416     continue:                               MOV A, R1
01CC F531            417                                                     MOV 31h, A
01CE B80007          418                                                     CJNE R0, #00h, code2 ;if counter of pressed
                              button (R0) is 0 its the first number of the code, else go to code2(second number)
01D1 E532            419                                                     MOV A, 32h                       ;code stor
                             ed on 2 registers. we use SWAP function to do this well. If code is 1234 : R3 : 00010010 (1,2)
01D3 F53B            420                                                     MOV 3Bh, A                       ;         
                                                                                                                        
                                                                                                 R4 : 00110100 (3,4)
01D5 E9              421                                                     MOV  A, R1
01D6 C4              422                                                     SWAP A
01D7 FB              423                                                     MOV  R3, A
01D8 B80107          424     code2:                                  CJNE R0, #01h, code3
01DB E532            425                                                     MOV A, 32h
01DD F53A            426                                                     MOV 3Ah, A
01DF E9              427                                                     MOV  A, R1                      ;second num
                             ber of the code
01E0 2B              428                                                     ADD  A, R3
01E1 FB              429                                                     MOV  R3, A
01E2 B80207          430     code3:                                  CJNE R0, #02h, code4
01E5 E532            431                                                     MOV A, 32h
01E7 F539            432                                                     MOV 39h, A
01E9 E9              433                                                     MOV  A, R1                      ;third
01EA C4              434                                                     SWAP A
01EB FA              435                                                     MOV  R2, A
01EC B8030A          436     code4:                                  CJNE R0, #03h, incR0
01EF E532            437                                                     MOV A, 32h
01F1 F538            438                                                     MOV 38h, A
01F3 E9              439                                                     MOV  A, R1                      ;fourth
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     8

01F4 2A              440                                                     ADD  A, R2
01F5 FA              441                                                     MOV  R2, A
01F6 0201FD          442                                                     LJMP checkCode
01F9 08              443     incR0:                                  INC R0                          ; increment the cou
                             nter of button pressed
01FA 020238          444                                                     LJMP endKeyboardISR
                     445     
01FD 7800            446     checkCode:                              MOV R0, #00h
01FF EC              447                                                     MOV A,R4
0200 6A              448                                                     XRL A,R2
0201 F4              449                                                     CPL A    ;XNOR to check that R4 and R2 are 
                             the same (if 11111111b)
0202 B4FF1B          450                                                     CJNE A, #0FFh, wrong ;check if code == main
                              code otherwise wrong
0205 ED              451                                                     MOV A,R5
0206 6B              452                                                     XRL A,R3 ;same XNOR for R3,R5
0207 F4              453                                                     CPL A
0208 B4FF15          454                                                     CJNE A, #0FFh, wrong
020B C2A4            455                                                     CLR P2.4 ;debug only
020D BE0007          456                                                     CJNE R6, #00h, desactivate ; if alarm activ
                             ated, desactivate it
0210 7E01            457                                                     MOV R6, #01h ; otherwise, activate it (prea
                             larm before actually set on)
0212 7FE1            458                                                     MOV R7, #0E1h ; put 15 seconds of period in
                              the counter before prealarm => alarm (counter at 225 with 15Hz) 
0214 020238          459                                                     LJMP endKeyboardISR
                     460                                                     
0217 7E00            461     desactivate:                    MOV R6, #00h
0219 7F00            462                                                     MOV R7, #00h ; reset the counter if the ala
                             rm is desactivate
021B D2A3            463                                                     SETB P2.3 ;debug
021D 020238          464                                                     LJMP endKeyboardISR
                     465                                                     
0220                 466     wrong:                                  ; SHOW WITH SCREEN OR LED ITS WRONG
0220 020223          467                                                     LJMP clearcode
                     468     
0223 7A00            469     clearcode:                              MOV R2, #00h
0225 7B00            470                                                     MOV R3, #00h
0227 7800            471                                                     MOV R0, #00h
0229 900379          472                                                     MOV DPTR, #KeyUS ; reset screen data
022C E0              473                                                     MOVX A, @DPTR
022D F53B            474                                                     MOV 3Bh, A
022F F53A            475                                                     MOV 3Ah, A
0231 F539            476                                                     MOV 39h, A
0233 F538            477                                                     MOV 38h, A
0235 020238          478                                                     LJMP endKeyboardISR
                     479                                                     
0238 758D0B          480     endKeyboardISR:                 MOV TH1,#0Bh 
023B 758BDB          481                                                     MOV TL1,#0DBh 
023E D0E0            482                                                     POP ACC
0240 D0D0            483                                                     POP PSW
0242 32              484                                                     RETI                                       
                                  
                     485     
                     486     
                     487     
0243 C0D0            488     extISR:                                 PUSH PSW ; STILL HAVE TO TEST PIR SENSOR AND CONFIG
                             URE THE ISR CORRECTLY
0245 C0E0            489                                                     PUSH ACC
0247 BE0108          490                                                     CJNE R6, #01h, endExtISR ;if alarm is not O
                             FF : end
024A 02024D          491                                                     LJMP detection
                     492     
024D 7FE1            493     detection:                              MOV R7, #0E1h ; set counter to 225 to go to 15s
024F 020252          494                                                     LJMP endExtISR
                     495                                                     
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE     9

0252 D0E0            496     endExtISR:                              POP ACC
0254 D0D0            497                                                     POP PSW
0256 32              498                                                     RETI
                     499     
                     500     
                     501     
                     502     
0257 C0D0            503     mainISR:                                PUSH PSW
0259 C0E0            504                                                     PUSH ACC
025B BE0003          505                                                     CJNE R6, #00h, next ; alarm is not activate
                             d : end otherwise next
025E 02027C          506                                                     LJMP endMainISR
0261 D2A4            507     next:                                   SETB P2.4 ; debug
0263 DF17            508                                                     DJNZ R7, endMainISR ; 15s decounting. norma
                             lly screen ! (?? what ? why screen ?)
0265 B2A3            509                                                     CPL P2.3 ; flashing led
0267 BE010C          510                                                     CJNE R6, #01h, scream ; if not pre alarm it
                              is pre alert and after 15s we can start SKRIMIN
026A BE0303          511                                                     CJNE R6, #03h, activation ; it is prealarm 
                             so activate alarm system after 15sc
026D 02027C          512                                                     LJMP endMainISR
                     513                                                     
0270 0E              514     activation:                             INC R6 ;prealarm mode to alarm mode
0271 C2A4            515                                                     CLR P2.4 ; led shows alarm is on
0273 02027C          516                                                     LJMP endMainISR
                     517                                                     
0276 0E              518     scream:                                 INC R6 ;prealert mode to alert mode
0277 B2A2            519                                                     CPL P2.2 ; change state of buzzer
0279 02027C          520                                                     LJMP endMainISR
                     521                                             
                     522     
027C 758CFB          523     endMainISR:                             MOV TH0,#0FBh ; MSB set 880Hz of timer 0 
027F 758A8F          524                                                     MOV TL0,#08Fh ; LSB same  for LSB
0282 D0E0            525                                                     POP ACC
0284 D0D0            526                                                     POP PSW
0286 32              527                                                     RETI
                     528     
                     529     
                     530                             
                     531                             
0287 C0D0            532     screenISR:                              PUSH PSW
0289 C0E0            533                                                     PUSH ACC
028B D2D4            534                                                     SETB RS1
028D D2D3            535                                                     SETB RS0
028F C2C1            536                                                     CLR DATA_BITS
0291 C2C0            537                                                     CLR SHIFT
0293 C2B2            538                                                     CLR STORE
0295 C2A3            539                                                     CLR P2.3
0297 ED              540                                                     MOV A,R5 ; init = 0, its index of the block
                              we are dealing with
                     541                                                     ;SUBB A, #1; WATT ? R5 - R5 = 0 -> somethin
                             g wrong, should delete this line right?
0298 FC              542                                                     MOV R4,A
                     543                                                     
0299 900371          544                                                     MOV DPTR, #KeyEmpty ; first some empty bloc
                             ks 
                     545                                                     
029C BC0003          546                                                     CJNE R4, #0, loop4a ; if R4 = 0 skip this l
                             oop !
029F 0202B8          547                                                     LJMP skip
                     548                                                     ; loop on number of repeated pattern
02A2 EE              549     loop4a:                                 MOV A, R6 ; R6 is an index for the used row
02A3 B40704          550                                                     CJNE A,#7, column_dispa ; reset row index w
                             hen complete
02A6 7400            551     reseta:                                 MOV A, #0
02A8 7E00            552                                                     MOV R6, #0
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    10

                     553                                                     
02AA 93              554     column_dispa:                   MOVC A, @A+DPTR
02AB 7B05            555                                                     MOV R3, #5
                     556                                                     ;each column bit (one by one)
02AD 13              557     loop3a:                                 RRC A ;right shift
02AE 92C1            558                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02B0 C2C0            559                                                     CLR SHIFT ;shift register
02B2 D2C0            560                                                     SETB SHIFT
02B4 DBF7            561                                                     DJNZ R3, loop3a
                     562                                                     
02B6 DCEA            563                                                     DJNZ R4, loop4a
                     564                                                     
                     565                                                     ;now display the wanted value 
02B8 900321          566     skip:                                   MOV DPTR, #Key0 ;start index at Key0
                     567                                                     ;MOV R4, #1 ; repeat pattern N times NO NEE
                             D
                     568                                                     ; number of repeated pattern
02BB EE              569     loop4b:                                 MOV A, R6 ; R6 is an index for the used row
02BC B40704          570                                                     CJNE A,#7, column_dispb ; reset row index w
                             hen complete
02BF 7E00            571     resetb:                                 MOV R6, #0
02C1 7400            572                                                     MOV A, #0
02C3 2538            573     column_dispb:                   ADD A, 38h
02C5 93              574                                                     MOVC A, @A+DPTR
02C6 7B05            575                                                     MOV R3, #5
                     576                                                     ;each column bit (one by one)
02C8 13              577     loop3b:                                 RRC A ;right shift
02C9 92C1            578                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02CB C2C0            579                                                     CLR SHIFT ;shift register
02CD D2C0            580                                                     SETB SHIFT
02CF DBF7            581                                                     DJNZ R3, loop3b
                     582     
                     583                                                     ;DJNZ R4, loop4b NO NEED
                     584     
02D1 7408            585                                                     MOV A, #8
02D3 9D              586                                                     SUBB A,R5  ; number of empty block at left:
                              8 : MUST BE CHANGED
02D4 FC              587                                                     MOV R4,A
02D5 900371          588                                                     MOV DPTR, #KeyEmpty
                     589     
                     590                                                     ; number of repeated pattern
02D8 EE              591     loop4c:                                 MOV A, R6 ; R6 is an index for the used row
02D9 B40704          592                                                     CJNE A,#7, column_dispc ; reset row index w
                             hen complete
02DC 7400            593     resetc:                                 MOV A, #0
02DE 7E00            594                                                     MOV R6, #0
                     595                                                     
02E0 93              596     column_dispc:                   MOVC A, @A+DPTR
02E1 7B05            597                                                     MOV R3, #5
                     598                                                     ;each column bit (one by one)
02E3 13              599     loop3c:                                 RRC A ;right shift
02E4 92C1            600                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02E6 C2C0            601                                                     CLR SHIFT ;shift register
02E8 D2C0            602                                                     SETB SHIFT
02EA DBF7            603                                                     DJNZ R3, loop3c
                     604     
02EC DCEA            605                                                     DJNZ R4, loop4c
                     606     
                     607     
                     608     
                     609                                                     ;loop on the lines
02EE 90031A          610                                                     MOV DPTR, #lines
02F1 EE              611                                                     MOV A, R6
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    11

02F2 93              612                                                     MOVC A, @A+DPTR
                     613     
02F3 7A08            614                                                     MOV R2, #8
02F5 13              615     loop2:                                  RRC A
02F6 92C1            616                                                     MOV DATA_BITS,C ;carry of the right shift i
                             n data output for display
02F8 C2C0            617                                                     CLR SHIFT ;shift register
02FA D2C0            618                                                     SETB SHIFT
02FC DAF7            619                                                     DJNZ R2,loop2
                     620     
02FE C2B2            621                                                     CLR STORE 
0300 D2B2            622                                                     SETB STORE ; store
0302 C2B2            623                                                     CLR STORE
                     624     
0304 0E              625                                                     INC R6
0305 0D              626                                                     INC R5; increment the counter of Blocks 
0306 BD0802          627                                                     CJNE R5, #8, endScreenISR
0309 7D00            628                                                     MOV R5, #0      
                     629                                                     
030B                 630     endScreenISR:                   
030B C2D3            631                                                     CLR RS0
030D C2D4            632                                                     CLR RS1
030F 758CFF          633                                                     MOV TH0,#0FFh
0312 758AFF          634                                                     MOV TL0,#0FFh
0315 D0E0            635                                                     POP ACC
0317 D0D0            636                                                     POP PSW
0319 32              637                                                     RETI            
                     638     
                     639     
                     640     ;Functions
                     641     
                     642     ;Code Memory Data
                     643     
031A 7F              644     lines:          DB 01111111b ; pattern to easily follow lines
031B BF              645                             DB 10111111b
031C DF              646                             DB 11011111b
031D EF              647                             DB 11101111b
031E F7              648                             DB 11110111b
031F FB              649                             DB 11111011b
0320 FD              650                             DB 11111101b
0321 19              651     Key0:           DB 11001b
0322 16              652                             DB 10110b
0323 16              653                             DB 10110b
0324 16              654                             DB 10110b
0325 16              655                             DB 10110b
0326 16              656                             DB 10110b
0327 19              657                             DB 11001b
0328 00              658                             DB 00000b
0329 1D              659     Key1:           DB 11101b
032A 19              660                             DB 11001b
032B 1D              661                             DB 11101b
032C 1D              662                             DB 11101b
032D 1D              663                             DB 11101b
032E 1D              664                             DB 11101b
032F 18              665                             DB 11000b
0330 00              666                             DB 00000b
0331 19              667     Key2:           DB 11001b
0332 16              668                             DB 10110b
0333 1E              669                             DB 11110b
0334 19              670                             DB 11001b
0335 17              671                             DB 10111b
0336 16              672                             DB 10110b
0337 19              673                             DB 11001b
0338 00              674                             DB 00000b
0339 19              675     Key3:           DB 11001b
033A 16              676                             DB 10110b
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    12

033B 1E              677                             DB 11110b
033C 11              678                             DB 10001b
033D 1E              679                             DB 11110b
033E 16              680                             DB 10110b
033F 19              681                             DB 11001b
0340 00              682                             DB 00000b
0341 1D              683     Key4:           DB 11101b
0342 19              684                             DB 11001b
0343 15              685                             DB 10101b
0344 15              686                             DB 10101b
0345 10              687                             DB 10000b
0346 1D              688                             DB 11101b
0347 1D              689                             DB 11101b
0348 00              690                             DB 00000b
0349 19              691     Key5:           DB 11001b
034A 16              692                             DB 10110b
034B 17              693                             DB 10111b
034C 19              694                             DB 11001b
034D 1E              695                             DB 11110b
034E 16              696                             DB 10110b
034F 19              697                             DB 11001b
0350 00              698                             DB 00000b
0351 19              699     Key6:           DB 11001b
0352 16              700                             DB 10110b
0353 17              701                             DB 10111b
0354 19              702                             DB 11001b
0355 16              703                             DB 10110b
0356 16              704                             DB 10110b
0357 19              705                             DB 11001b
0358 00              706                             DB 00000b
0359 19              707     Key7:           DB 11001b
035A 16              708                             DB 10110b
035B 1E              709                             DB 11110b
035C 18              710                             DB 11000b
035D 1E              711                             DB 11110b
035E 1E              712                             DB 11110b
035F 1E              713                             DB 11110b
0360 00              714                             DB 00000b
0361 19              715     Key8:           DB 11001b
0362 16              716                             DB 10110b
0363 16              717                             DB 10110b
0364 19              718                             DB 11001b
0365 16              719                             DB 10110b
0366 16              720                             DB 10110b
0367 19              721                             DB 11001b
0368 00              722                             DB 00000b
0369 19              723     Key9:           DB 11001b
036A 16              724                             DB 10110b
036B 16              725                             DB 10110b
036C 19              726                             DB 11001b
036D 1E              727                             DB 11110b
036E 16              728                             DB 10110b
036F 19              729                             DB 11001b
0370 00              730                             DB 00000b
0371 1F              731     KeyEmpty:       DB 11111b
0372 1F              732                             DB 11111b
0373 1F              733                             DB 11111b
0374 1F              734                             DB 11111b
0375 1F              735                             DB 11111b
0376 1F              736                             DB 11111b
0377 1F              737                             DB 11111b
0378 00              738                             DB 00000b
0379 1F              739     KeyUS:          DB 11111b
037A 1F              740                             DB 11111b
037B 1F              741                             DB 11111b
037C 1F              742                             DB 11111b
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    13

037D 1F              743                             DB 11111b
037E 1F              744                             DB 11111b
037F 10              745                             DB 10000b
0380 00              746                             DB 00000b
                     747     end
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    14

SYMBOL TABLE LISTING
------ ----- -------


N A M E              T Y P E  V A L U E   ATTRIBUTES

AC. . . . . . . . .  B ADDR   00D0H.6 A   
ACC . . . . . . . .  D ADDR   00E0H   A   
ACTIVATION. . . . .  C ADDR   0270H   A   
ADCF. . . . . . . .  D ADDR   00F6H   A   
ADCLK . . . . . . .  D ADDR   00F2H   A   
ADCON . . . . . . .  D ADDR   00F3H   A   
ADDH. . . . . . . .  D ADDR   00F5H   A   
ADDL. . . . . . . .  D ADDR   00F4H   A   
AUXR. . . . . . . .  D ADDR   008EH   A   
AUXR1 . . . . . . .  D ADDR   00A2H   A   
B . . . . . . . . .  D ADDR   00F0H   A   
CANBT1. . . . . . .  D ADDR   00B4H   A   
CANBT2. . . . . . .  D ADDR   00B5H   A   
CANBT3. . . . . . .  D ADDR   00B6H   A   
CANCONCH. . . . . .  D ADDR   00B3H   A   
CANEN1. . . . . . .  D ADDR   00CEH   A   
CANEN2. . . . . . .  D ADDR   00CFH   A   
CANGCON . . . . . .  D ADDR   00ABH   A   
CANGIE. . . . . . .  D ADDR   00C1H   A   
CANGIT. . . . . . .  D ADDR   009BH   A   
CANGSTA . . . . . .  D ADDR   00AAH   A   
CANIDM1 . . . . . .  D ADDR   00C4H   A   
CANIDM2 . . . . . .  D ADDR   00C5H   A   
CANIDM3 . . . . . .  D ADDR   00C6H   A   
CANIDM4 . . . . . .  D ADDR   00C7H   A   
CANIDT1 . . . . . .  D ADDR   00BCH   A   
CANIDT2 . . . . . .  D ADDR   00BDH   A   
CANIDT3 . . . . . .  D ADDR   00BEH   A   
CANIDT4 . . . . . .  D ADDR   00BFH   A   
CANIE1. . . . . . .  D ADDR   00C2H   A   
CANIE2. . . . . . .  D ADDR   00C3H   A   
CANMSG. . . . . . .  D ADDR   00A3H   A   
CANPAGE . . . . . .  D ADDR   00B1H   A   
CANREC. . . . . . .  D ADDR   009DH   A   
CANSIT1 . . . . . .  D ADDR   00BAH   A   
CANSIT2 . . . . . .  D ADDR   00BBH   A   
CANSTCH . . . . . .  D ADDR   00B2H   A   
CANSTMPH. . . . . .  D ADDR   00AFH   A   
CANSTMPL. . . . . .  D ADDR   00AEH   A   
CANTCON . . . . . .  D ADDR   00A1H   A   
CANTEC. . . . . . .  D ADDR   009CH   A   
CANTIMH . . . . . .  D ADDR   00ADH   A   
CANTIML . . . . . .  D ADDR   00ACH   A   
CANTTCH . . . . . .  D ADDR   00A5H   A   
CANTTCL . . . . . .  D ADDR   00A4H   A   
CCAP0H. . . . . . .  D ADDR   00FAH   A   
CCAP0L. . . . . . .  D ADDR   00EAH   A   
CCAP1H. . . . . . .  D ADDR   00FBH   A   
CCAP1L. . . . . . .  D ADDR   00EBH   A   
CCAP2H. . . . . . .  D ADDR   00FCH   A   
CCAP2L. . . . . . .  D ADDR   00ECH   A   
CCAP3H. . . . . . .  D ADDR   00FDH   A   
CCAP3L. . . . . . .  D ADDR   00EDH   A   
CCAP4H. . . . . . .  D ADDR   00FEH   A   
CCAP4L. . . . . . .  D ADDR   00EEH   A   
CCAPM0. . . . . . .  D ADDR   00DAH   A   
CCAPM1. . . . . . .  D ADDR   00DBH   A   
CCAPM2. . . . . . .  D ADDR   00DCH   A   
CCAPM3. . . . . . .  D ADDR   00DDH   A   
CCAPM4. . . . . . .  D ADDR   00DEH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    15

CCF0. . . . . . . .  B ADDR   00D0H.0 A   
CCF1. . . . . . . .  B ADDR   00D0H.1 A   
CCF2. . . . . . . .  B ADDR   00D0H.2 A   
CCF3. . . . . . . .  B ADDR   00D0H.3 A   
CCF4. . . . . . . .  B ADDR   00D0H.4 A   
CCON. . . . . . . .  D ADDR   00D8H   A   
CF. . . . . . . . .  B ADDR   00D8H.7 A   
CH. . . . . . . . .  D ADDR   00F9H   A   
CHECKCODE . . . . .  C ADDR   01FDH   A   
CKCON . . . . . . .  D ADDR   008FH   A   
CL. . . . . . . . .  D ADDR   00E9H   A   
CLEARCODE . . . . .  C ADDR   0223H   A   
CMOD. . . . . . . .  D ADDR   00D9H   A   
CODE2 . . . . . . .  C ADDR   01D8H   A   
CODE3 . . . . . . .  C ADDR   01E2H   A   
CODE4 . . . . . . .  C ADDR   01ECH   A   
COLUMN_DISPA. . . .  C ADDR   02AAH   A   
COLUMN_DISPB. . . .  C ADDR   02C3H   A   
COLUMN_DISPC. . . .  C ADDR   02E0H   A   
CONTINUE. . . . . .  C ADDR   01CBH   A   
CP_RL2. . . . . . .  B ADDR   00C8H.0 A   
CR. . . . . . . . .  B ADDR   00D8H.6 A   
CY. . . . . . . . .  B ADDR   00D0H.7 A   
C_T2. . . . . . . .  B ADDR   00C8H.1 A   
DATA_BITS . . . . .  B ADDR   00C0H.1 A   
DESACTIVATE . . . .  C ADDR   0217H   A   
DETECTION . . . . .  C ADDR   024DH   A   
DICHOTOMY00 . . . .  C ADDR   00A7H   A   
DICHOTOMY00ONE. . .  C ADDR   011DH   A   
DICHOTOMY00ZERO . .  C ADDR   00DFH   A   
DICHOTOMY01 . . . .  C ADDR   00B5H   A   
DICHOTOMY01ONE. . .  C ADDR   012BH   A   
DICHOTOMY01ZERO . .  C ADDR   00EDH   A   
DICHOTOMY02 . . . .  C ADDR   00C3H   A   
DICHOTOMY02ONE. . .  C ADDR   0139H   A   
DICHOTOMY02ZERO . .  C ADDR   00FBH   A   
DICHOTOMY03 . . . .  C ADDR   00D1H   A   
DICHOTOMY03ONE. . .  C ADDR   014DH   A   
DICHOTOMY03ZERO . .  C ADDR   0109H   A   
DPH . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . .  B ADDR   00A8H.7 A   
EADC. . . . . . . .  B ADDR   00E8H.1 A   
EC. . . . . . . . .  B ADDR   00A8H.6 A   
ECAN. . . . . . . .  B ADDR   00E8H.0 A   
EECON . . . . . . .  D ADDR   00D2H   A   
EIGHT . . . . . . .  C ADDR   019BH   A   
ENDEXTISR . . . . .  C ADDR   0252H   A   
ENDKEYBOARDISR. . .  C ADDR   0238H   A   
ENDMAINISR. . . . .  C ADDR   027CH   A   
ENDSCREENISR. . . .  C ADDR   030BH   A   
ENTERCODE . . . . .  C ADDR   01C3H   A   
ES. . . . . . . . .  B ADDR   00A8H.4 A   
ET0 . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . .  B ADDR   00A8H.3 A   
ET2 . . . . . . . .  B ADDR   00A8H.5 A   
ETIM. . . . . . . .  B ADDR   00E8H.2 A   
EX0 . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . .  B ADDR   00A8H.2 A   
EXEN2 . . . . . . .  B ADDR   00C8H.3 A   
EXF2. . . . . . . .  B ADDR   00C8H.6 A   
EXTISR. . . . . . .  C ADDR   0243H   A   
F0. . . . . . . . .  B ADDR   00D0H.5 A   
FCON. . . . . . . .  D ADDR   00D1H   A   
FE. . . . . . . . .  B ADDR   0098H.7 A   
FIVE. . . . . . . .  C ADDR   0183H   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    16

FOUR. . . . . . . .  C ADDR   017BH   A   
FPGACON . . . . . .  D ADDR   00F1H   A   
IE0 . . . . . . . .  B ADDR   0088H.1 A   
IE1 . . . . . . . .  B ADDR   0088H.3 A   
IEN0. . . . . . . .  D ADDR   00A8H   A   
IEN1. . . . . . . .  D ADDR   00E8H   A   
INCR0 . . . . . . .  C ADDR   01F9H   A   
INIT. . . . . . . .  C ADDR   002EH   A   
INT0. . . . . . . .  B ADDR   00B0H.2 A   
INT1. . . . . . . .  B ADDR   00B0H.3 A   
INTERMEDIATELETTERA  C ADDR   0147H   A   
INTERMEDIATELETTERB  C ADDR   011AH   A   
INTERMEDIATELETTERC  C ADDR   0117H   A   
INTERMEDIATELETTERE  C ADDR   014AH   A   
IPH0. . . . . . . .  D ADDR   00B7H   A   
IPH1. . . . . . . .  D ADDR   00F7H   A   
IPL0. . . . . . . .  D ADDR   00B8H   A   
IPL1. . . . . . . .  D ADDR   00F8H   A   
IT0 . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . .  B ADDR   0088H.2 A   
KEY0. . . . . . . .  C ADDR   0321H   A   
KEY1. . . . . . . .  C ADDR   0329H   A   
KEY2. . . . . . . .  C ADDR   0331H   A   
KEY3. . . . . . . .  C ADDR   0339H   A   
KEY4. . . . . . . .  C ADDR   0341H   A   
KEY5. . . . . . . .  C ADDR   0349H   A   
KEY6. . . . . . . .  C ADDR   0351H   A   
KEY7. . . . . . . .  C ADDR   0359H   A   
KEY8. . . . . . . .  C ADDR   0361H   A   
KEY9. . . . . . . .  C ADDR   0369H   A   
KEYBOARDISR . . . .  C ADDR   008FH   A   
KEYEMPTY. . . . . .  C ADDR   0371H   A   
KEYUS . . . . . . .  C ADDR   0379H   A   
LETTERA . . . . . .  C ADDR   01ABH   A   
LETTERB . . . . . .  C ADDR   01AEH   A   
LETTERC . . . . . .  C ADDR   01B1H   A   
LETTERD . . . . . .  C ADDR   01B4H   A   
LETTERE . . . . . .  C ADDR   01B7H   A   
LETTERF . . . . . .  C ADDR   01BAH   A   
LINES . . . . . . .  C ADDR   031AH   A   
LOOP2 . . . . . . .  C ADDR   02F5H   A   
LOOP3A. . . . . . .  C ADDR   02ADH   A   
LOOP3B. . . . . . .  C ADDR   02C8H   A   
LOOP3C. . . . . . .  C ADDR   02E3H   A   
LOOP4A. . . . . . .  C ADDR   02A2H   A   
LOOP4B. . . . . . .  C ADDR   02BBH   A   
LOOP4C. . . . . . .  C ADDR   02D8H   A   
MAIN. . . . . . . .  C ADDR   008CH   A   
MAINISR . . . . . .  C ADDR   0257H   A   
NEXT. . . . . . . .  C ADDR   0261H   A   
NINE. . . . . . . .  C ADDR   01A3H   A   
NOTHING . . . . . .  C ADDR   01BDH   A   
ONE . . . . . . . .  C ADDR   0163H   A   
OV. . . . . . . . .  B ADDR   00D0H.2 A   
P . . . . . . . . .  B ADDR   00D0H.0 A   
P0. . . . . . . . .  D ADDR   0080H   A   
P1. . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . .  D ADDR   00B0H   A   
P4. . . . . . . . .  D ADDR   00C0H   A   
PCON. . . . . . . .  D ADDR   0087H   A   
PSW . . . . . . . .  D ADDR   00D0H   A   
RB8 . . . . . . . .  B ADDR   0098H.2 A   
RCAP2H. . . . . . .  D ADDR   00CBH   A   
RCAP2L. . . . . . .  D ADDR   00CAH   A   
RCLK. . . . . . . .  B ADDR   00C8H.5 A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 12:49:30 PAGE    17

RD. . . . . . . . .  B ADDR   00B0H.7 A   
REN . . . . . . . .  B ADDR   0098H.4 A   
RESETA. . . . . . .  C ADDR   02A6H   A   
RESETB. . . . . . .  C ADDR   02BFH   A   
RESETC. . . . . . .  C ADDR   02DCH   A   
RI. . . . . . . . .  B ADDR   0098H.0 A   
RS0 . . . . . . . .  B ADDR   00D0H.3 A   
RS1 . . . . . . . .  B ADDR   00D0H.4 A   
RXD . . . . . . . .  B ADDR   00B0H.0 A   
SADDR . . . . . . .  D ADDR   00A9H   A   
SADEN . . . . . . .  D ADDR   00B9H   A   
SBUF. . . . . . . .  D ADDR   0099H   A   
SCON. . . . . . . .  D ADDR   0098H   A   
SCREAM. . . . . . .  C ADDR   0276H   A   
SCREENISR . . . . .  C ADDR   0287H   A   
SEVEN . . . . . . .  C ADDR   0193H   A   
SHIFT . . . . . . .  B ADDR   00C0H.0 A   
SIX . . . . . . . .  C ADDR   018BH   A   
SKIP. . . . . . . .  C ADDR   02B8H   A   
SM0 . . . . . . . .  B ADDR   0098H.7 A   
SM1 . . . . . . . .  B ADDR   0098H.6 A   
SM2 . . . . . . . .  B ADDR   0098H.5 A   
SP. . . . . . . . .  D ADDR   0081H   A   
STORE . . . . . . .  B ADDR   00B0H.2 A   
T0. . . . . . . . .  B ADDR   00B0H.4 A   
T1. . . . . . . . .  B ADDR   00B0H.5 A   
T2CON . . . . . . .  D ADDR   00C8H   A   
T2MOD . . . . . . .  D ADDR   00C9H   A   
TB8 . . . . . . . .  B ADDR   0098H.3 A   
TCLK. . . . . . . .  B ADDR   00C8H.4 A   
TCON. . . . . . . .  D ADDR   0088H   A   
TF0 . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . .  B ADDR   0088H.7 A   
TF2 . . . . . . . .  B ADDR   00C8H.7 A   
TH0 . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . .  D ADDR   008DH   A   
TH2 . . . . . . . .  D ADDR   00CDH   A   
THREE . . . . . . .  C ADDR   0173H   A   
TI. . . . . . . . .  B ADDR   0098H.1 A   
TL0 . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . .  D ADDR   008BH   A   
TL2 . . . . . . . .  D ADDR   00CCH   A   
TMOD. . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . .  B ADDR   0088H.6 A   
TR2 . . . . . . . .  B ADDR   00C8H.2 A   
TWO . . . . . . . .  C ADDR   016BH   A   
TXD . . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG. . . . . . .  D ADDR   00A7H   A   
WDTRST. . . . . . .  D ADDR   00A6H   A   
WR. . . . . . . . .  B ADDR   00B0H.6 A   
WRONG . . . . . . .  C ADDR   0220H   A   
ZERO. . . . . . . .  C ADDR   015BH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
